<!--
  @Page Name          : nmPaymentNew.page
  @Description        : 
  @Author             : shubhranshu
  @Group              : 
  @Last Modified By   : @vickysahu
  @Last Modified On   : 03-07-2025
  @Modification Log   : 
  ==============================================================================
  Ver         Date                     Author                 Modification
  ==============================================================================
  1.0    6/1/2019, 3:13:24 PM   shubhranshu     Initial Version
-->
<apex:page controller="nmPaymentNew" showHeader="false" sidebar="false" standardStylesheets="false" cache="false" applyBodyTag="false">
    <head>
        <!-- Google Tag Manager -->
        <c:HeaderGTagManager />
        <!-- Google Tag Manager -->
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
        <title>NMIMS Distance Education: Login</title>
        <meta name="description" content="Award winning distance education university, Narsee Monjee offers wide range of Professional management courses like PG, Diploma & Certification programs."
        />
        <meta name="keywords" content="Narsee Monjee Distance Learning University, NMIMS Distance Programs, Executive Education, Top distance learning program in India, PG Diploma, Certification courses, Online Education"
        />
        <meta name="viewport" content="width=device-width, initial-scale=1" />

        <apex:stylesheet value="{!URLFOR($Resource.NewResource, 'NewResource/assets/css/bootstrap.min.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.NewResource, 'NewResource/assets/css/bootstrap-datetimepicker.min.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.NewResource, 'NewResource/assets/css/fonts.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.NewResource, 'NewResource/assets/css/style.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.NewResource, 'NewResource/assets/css/vars.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.NewResource, 'NewResource/assets/css/paymentpage.css')}" />
        

        <script type="text/javascript">
            history.pushState(null, null, 'nmPaymentNew');
            window.addEventListener('popstate', function () {
                history.pushState(null, null, 'nmPaymentNew');
            });
            $(function () {
                $('#datetimepicker3').datetimepicker({
                    format: 'DD/MM/YYYY'
                    // minDate: moment().add(-50,'years'),
                    // maxDate: moment(),
                    // useCurrent: false
                });
            });
        </script>

        <!-- Conversion Pixel - NMIMS_PaymentConfimation_8378387 - DO NOT MODIFY -->
        <script src="https://secure.adnxs.com/px?id=839255&seg=8378387&t=1" type="text/javascript"></script>
        <!-- End of Conversion Pixel -->
    </head>
    <body class="home">
        <c:BodyGTagManager />
        <!-- Header component -->
        <c:HeaderPage ActiveBadge="Payment" />
        <!-- Header component -->

        <!-- Payment -->
        <apex:form id="PaymentForm">
            <div class="transparent-background loaderPanel" style="display:none;">
                <div class="loader-center">
                    <div class="loader">Loading...</div>
                </div>
            </div>
            <apex:inputHidden id="hdngetWay" value="{!paymentGateWayName}" />
            <apex:actionFunction name="callMakePayment" action="{!MakeOnlinePayment}" />
            <apex:inputHidden id="hdnPaymentMode" value="{!objPayment.nm_ModeOfPayment__c}" />
            <apex:inputHidden id="hdnPaymentOption" value="{!paymentFor}" />
            <apex:inputHidden id="hdnLiveLecturesOption" value="{!liveLecType}" />
            <apex:inputHidden id="hdnCourseList" value="{!courseList}" />
            <apex:inputHidden id="hdnBacklogList" value="{!backlogList}" />
            <apex:inputHidden id="hdnDepositeAmount" value="{!depositAmount}" />
            <apex:inputHidden id="hdnTenure" value="{!Tenure}" />
            <apex:inputHidden id="hdnEMI" value="{!EMI}" />
            <apex:inputHidden id="hdnInterestrate" value="{!InterestRate}" />
            <apex:inputHidden id="hdnLoanType" value="{!LoanType}" />
            <apex:inputHidden value="{!applicableCareerServiceFee}" id="applicableCareerServiceFee" />
            <apex:inputHidden value="{!objCoursera.applicableCourseraFee}" id="applicableCourseraFee"/>
            <apex:inputHidden id="hdnSubjectsCount" value="{!jsonMapOfLectureTypeAndSubjects}" />
            <apex:inputHidden id="checkCareerServiceOpted" value="{!CareerServiceOpted}" />
            <apex:inputHidden id="checkCourseraOpted" value="{!objCoursera.checkCourseraOpted}" />
            <form id="reg-long-form" role="form">
                <apex:pageMessages />
                <apex:outputPanel rendered="{!(strSecToShow == 'error')}">
                    <p>
                        <h2>{!errMessages}</h2>
                    </p>
                    <apex:outputLink value="/apex/nmLogin_new" id="theLink" rendered="{!isShow}">
                        <span style="color:red">Click here</span>
                    </apex:outputLink>
                </apex:outputPanel>
                <apex:outputPanel rendered="{!(strSecToShow == 'main')}">
                    <div class="tab-wrapper">
                        <div class="container-fluid">
                            <div class="tab-content">
                                <div class="tab-pane active" style="padding:0">
                                    <div class="form-wrapper">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <input type="Text" disabled="true" value="{!studentNo}" class="form-control" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" id="paymentOptionSection">
                                                <apex:inputHidden value="{!jsonMapOfProductAndAmount}" id="jsonStringOfProductVsAmount" />
                                                <!--------------------------------------Multiple Payment Option ------------------------------------------------------>
                                                <div class="col-md-8" style="border-right: 1px solid black; ">
                                                    <div class="message-box text-center form-group padding10 margin">Select Payment Category
                                                        <a class="icon-down-arrow toggleBtn" style="float: right;color:white" href="javascript:void(0);" data-id="paymentFoSection1"></a>
                                                    </div>
                                                    <div class="form-group paymentFoSection1">
                                                        <div class="row">
                                                            <div class="col-md-2">
                                                                <strong>Payment For</strong>
                                                            </div>
                                                            <div class="col-md-10">
                                                                <div class="row">
                                                                    <apex:variable var="setOfApplicablePaymentOption" value="{!''}{!setOfApplicablePaymentOptionForStudent}" />
                                                                    <apex:variable var="setOfPaymentOption" value="{!''}{!setOfPaymentOptionsAvailable}" />
                                                                    <div class="btn-group" style="padding:5px;" role="group" aria-label="Basic example">

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfApplicablePaymentOption,'Registration Fee') && !AlreadyPaidRegistrationFee}">
                                                                            <button type="button" class="btn btn-secondary PaymentForTuitionPayment m5" data-mode="1" data-value="Registration" data-label="Registration {!IF(MergeAdmissionFeeWithRegistration,' + Initial amount','')} {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')}" data-amount="{!( mapOfProductAndAmount['Registration Fee']  +applicableCareerServiceFee+objCoursera.applicableCourseraFee+ IF(MergeAdmissionFeeWithRegistration, mapOfProductAndAmount['Initial Payment'],0) )}">
                                                                                {!( mapOfProductAndAmount['Registration Fee']  +applicableCareerServiceFee+ objCoursera.applicableCourseraFee + IF(MergeAdmissionFeeWithRegistration, mapOfProductAndAmount['Initial Payment'],0) )} Registration {!IF(MergeAdmissionFeeWithRegistration,' + Initial amount','')} {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfApplicablePaymentOption,'InitialAdmission') && !AlreadyPaidInitialAdmissionfee && ShowInitialAdmissionPayment  }">
                                                                            <button type="button" class="btn btn-secondary PaymentForTuitionPayment m5" data-mode="1" data-value="InitialAdmissionFee" data-label="{!IF(AlreadyPaidRegistrationFee,'','Registration + ')} Initial Admission Payment {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}">
                                                                                {!(mapOfProductAndAmount['InitialAdmissionFee'] +applicableCareerServiceFee+ objCoursera.applicableCourseraFee+ applicableLateFee +IF(AlreadyPaidRegistrationFee,0,mapOfProductAndAmount['Registration Fee']) )} {!IF(AlreadyPaidRegistrationFee,'','Registration + ')} Initial Admission Payment {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfPaymentOption,'Admission') }">
                                                                            <button type="button" class="btn btn-secondary PaymentForTuitionPayment m5" data-mode="1" data-value="Admission" data-label="{!IF(AlreadyPaidRegistrationFee,'','Registration + ')} Admission {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')} {!IF(CONTAINS(ICName,'Verizon'),'+Exam Fee','')}">
                                                                                {!(mapOfProductAndAmount['Admission'] + applicableCareerServiceFee+ objCoursera.applicableCourseraFee+ applicableLateFee + IF(AlreadyPaidRegistrationFee,0,mapOfProductAndAmount['Registration Fee']))} {!IF(AlreadyPaidRegistrationFee,'','Registration + ')} Admission {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')} {!IF(CONTAINS(ICName,'Verizon'),'+Exam Fee','')}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfPaymentOption,'AnnualFee')}">
                                                                            <button type="button" class="btn btn-secondary PaymentForTuitionPayment m5" data-mode="1" data-value="AnnualFee" data-label="{!IF(AlreadyPaidRegistrationFee,'','Registration + ')} AnnualFee {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}">
                                                                                {!mapOfProductAndAmount['AnnualFee'] + applicableCareerServiceFee+ objCoursera.applicableCourseraFee+ applicableLateFee + IF(AlreadyPaidRegistrationFee,0,mapOfProductAndAmount['Registration Fee']) } {!IF(AlreadyPaidRegistrationFee,'','Registration + ')} AnnualFee {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfPaymentOption,'2TermFee') }">
                                                                            <button type="button" class="btn btn-secondary PaymentForTuitionPayment m5" data-mode="1" data-value="2TermFee" data-label="{!IF(AlreadyPaidRegistrationFee,'','Registration + ')} 2TermFee {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}">
                                                                                {!mapOfProductAndAmount['2TermFee'] + applicableCareerServiceFee+ objCoursera.applicableCourseraFee+ applicableLateFee + IF(AlreadyPaidRegistrationFee,0,mapOfProductAndAmount['Registration Fee']) } {!IF(AlreadyPaidRegistrationFee,'','Registration + ')} 2TermFee {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}
                                                                            </button>
                                                                        </apex:outputpanel>
                                                                        
                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfPaymentOption,'3SemFee') }">
                                                                            <button type="button" class="btn btn-secondary PaymentForTuitionPayment m5" data-mode="1" data-value="3SemFee" data-label="{!IF(AlreadyPaidRegistrationFee,'','Registration + ')} {!IF(isTerm,'3TermFee','3SemFee')} {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}">
                                                                                {! mapOfProductAndAmount['3SemFee'] + applicableCareerServiceFee + objCoursera.applicableCourseraFee+ applicableLateFee + IF(AlreadyPaidRegistrationFee,0,mapOfProductAndAmount['Registration Fee']) } {!IF(AlreadyPaidRegistrationFee,'','Registration + ')} {!IF(isTerm,'3TermFee','3SemFee')} {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfPaymentOption,'4SemFee') }">
                                                                            <button type="button" class="btn btn-secondary PaymentForTuitionPayment m5" data-mode="1" data-value="4SemFee" data-label="{!IF(AlreadyPaidRegistrationFee,'','Registration + ')} {!IF(isTerm,'4TermFee','4SemFee')} {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}">
                                                                                {! mapOfProductAndAmount['4SemFee'] + applicableCareerServiceFee + objCoursera.applicableCourseraFee+ applicableLateFee + IF(AlreadyPaidRegistrationFee,0,mapOfProductAndAmount['Registration Fee']) } {!IF(AlreadyPaidRegistrationFee,'','Registration + ')} {!IF(isTerm,'4TermFee','4SemFee')} {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfPaymentOption,'5SemFee') }">
                                                                            <button type="button" class="btn btn-secondary PaymentForTuitionPayment m5" data-mode="1" data-value="5SemFee" data-label="{!IF(AlreadyPaidRegistrationFee,'','Registration + ')} {!IF(isTerm,'5TermFee','5SemFee')} {!IF(CareerServiceOpted,' + Career Services','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}">
                                                                                {! mapOfProductAndAmount['5SemFee'] + applicableCareerServiceFee + objCoursera.applicableCourseraFee+ applicableLateFee + IF(AlreadyPaidRegistrationFee,0,mapOfProductAndAmount['Registration Fee']) } {!IF(AlreadyPaidRegistrationFee,'','Registration + ')} {!IF(isTerm,'5TermFee','5SemFee')} {!IF(CareerServiceOpted,' + Career Services','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfPaymentOption,'MultipleSemFee') }">
                                                                            <button type="button" class="btn btn-secondary PaymentForTuitionPayment m5" data-mode="1" data-value="MultipleSemFee" data-label="{!IF(AlreadyPaidRegistrationFee,'','Registration + ')} Multiple Sem Fee {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}">
                                                                                {! mapOfProductAndAmount['MultipleSemFee'] +applicableCareerServiceFee+ objCoursera.applicableCourseraFee+ applicableLateFee + IF(AlreadyPaidRegistrationFee,0,mapOfProductAndAmount['Registration Fee']) } {!IF(AlreadyPaidRegistrationFee,'','Registration + ')} Multiple Sem Fee {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfPaymentOption,'3TermFee') }">
                                                                            <button type="button" class="btn btn-secondary PaymentForTuitionPayment m5" data-mode="1" data-value="3TermFee" data-label="{!IF(AlreadyPaidRegistrationFee,'','Registration + ')} 3TermFee {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}">
                                                                                {! mapOfProductAndAmount['3TermFee'] +applicableCareerServiceFee + objCoursera.applicableCourseraFee+ applicableLateFee + IF(AlreadyPaidRegistrationFee,0,mapOfProductAndAmount['Registration Fee']) } {!IF(AlreadyPaidRegistrationFee,'','Registration + ')} 3TermFee {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfPaymentOption,'FullFee') }">
                                                                            <button type="button" class="btn btn-secondary PaymentForTuitionPayment m5" data-mode="1" data-value="FullFee" data-label="{!IF(AlreadyPaidRegistrationFee,'','Registration + ')} FullFee {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}">
                                                                                {! mapOfProductAndAmount['FullFee'] + applicableCareerServiceFee + objCoursera.applicableCourseraFee+ applicableLateFee + IF(AlreadyPaidRegistrationFee,0,mapOfProductAndAmount['Registration Fee']) } {!IF(AlreadyPaidRegistrationFee,'','Registration + ')} FullFee {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfPaymentOption,'FullFeeLoan')}">
                                                                            <button type="button" class="btn btn-secondary PaymentForTuitionPayment m5" data-mode="1" data-value="FullFeeLoan" data-label="{!IF(AlreadyPaidRegistrationFee,'','Registration + ')} FullFeeLoan {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}">
                                                                                {! mapOfProductAndAmount['FullFeeLoan'] + applicableCareerServiceFee + objCoursera.applicableCourseraFee+ applicableLateFee + IF(AlreadyPaidRegistrationFee,0,mapOfProductAndAmount['Registration Fee']) } {!IF(AlreadyPaidRegistrationFee,'','Registration + ')} FullFeeLoan {!IF(CareerServiceOpted,' + Career Services','')} {!IF(objCoursera.checkCourseraOpted,' + Coursera','')} {!IF(applicableLateFee > 0,' + Late Fee' ,'')}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <!--
                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfApplicablePaymentOption,'RepeatTermFee') && !AlreadyPaidRepeatTermFee}">
                                                                            <button type="button" class="btn btn-secondary PaymentForTuitionPayment" data-mode="1" data-value="RepeatTermFee" data-label="Repeat Term Fee">
                                                                                {!mapOfProductAndAmount['RepeatTermFee']} Repeat Term Fee
                                                                            </button>
                                                                        </apex:outputpanel>
                                                                        -->
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <!-----------------------------------------------------------Career Service ------------------------>
                                                        <apex:actionFunction name="callConfigurePaymentOption" action="{!configurePaymentOption}" reRender="PaymentForm,ProductScriptSection"/>
                                                        <apex:outPutPanel rendered="{!IF(ShowCareerServiceOpt && !CareerServicePackage,true,false)}">
                                                            <div class="row" style="margin-top:15px;">
                                                                <div class="col-md-12">
                                                                    <div class="checkbox">
                                                                        <label>
                                                                            <input type="checkbox" name="PaymentForCareer" id="PaymentForCareer" value="Career Development" onclick="OptedForCareerService(this);"
                                                                                class="iCheckRadio" data-mode="1" />
                                                                            <span>
                                                                                <strong>Yes, I want to opt for Career Services.</strong>
                                                                                <a
                                                                                    href="https://distance.nmims.edu/career-services/"
                                                                                    target="_blank" style="color: #aa1f24;font-weight: 600;">
                                                                                    <u>Know More</u>
                                                                                    </a>
                                                                            </span>
                                                                            <br/>
                                                                            <span>(You're eligible for the Career Development package
                                                                                worth Rs. 6,999/- only)</span>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                                
                                                                <script>
                                                                    if ('{!CareerServiceOpted}' == 'true') {
                                                                        document.getElementById("PaymentForCareer").checked = true;
                                                                    }

                                                                    $('[id$=DDNote]').hide();
                                                                    $('[id$=NEFTNote]').hide();
                                                                    $('[id$=PayBtndd]').hide();
                                                                    $('[id$=PayBtnNEFT]').hide();
                                                                    $('#InstallmentPaymentButton').hide();
                                                                    $('[id$=depositAmountPanel]').hide();
                                                                    $('[id$=LoandepositAmountPanel]').hide();
                                                                    $('[id$=proceedToLoan]').hide();
                                                                </script>
                                                            </div>
                                                        </apex:outPutPanel>
                                                        <!----------------------------------------------------------- Coursera ------------------------>
                                                        <apex:outputPanel rendered="{!IF(objCoursera.showCoursera && !objCoursera.isCourseraAlreadyOpted,true,false)}">
                                                            <div class="row">
                                                                <div class="col-md-12">
                                                                    <div class="checkbox">
                                                                        <label>
                                                                            <input type="checkbox" name="PaymentForCoursera" id="PaymentForCoursera" value="Coursera" onclick="OptedForCareerService(this);"
                                                                                class="iCheckRadio" data-mode="1" />
                                                                            <span>
                                                                                <strong>Yes, I want to opt for Coursera.</strong>
                                                                                <a
                                                                                    href="https://online.nmims.edu/coursera-for-campus/"
                                                                                    target="_blank" style="color: #aa1f24;font-weight: 600;">
                                                                                    <u>Know More</u>
                                                                                    </a>
                                                                            </span>
                                                                            <br/>
                                                                            <span>(You're eligible for the Coursera package
                                                                                worth Rs. 8,260/- only, including GST <br/>
                                                                                <span>Note:</span> Coursera subscription can be cancelled within 7 days only)</span>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                                <script>
                                                                    if ('{!objCoursera.checkCourseraOpted}' == 'true') {
                                                                        document.getElementById("PaymentForCoursera").checked = true;
                                                                    }

                                                                    $('[id$=DDNote]').hide();
                                                                    $('[id$=NEFTNote]').hide();
                                                                    $('[id$=PayBtndd]').hide();
                                                                    $('[id$=PayBtnNEFT]').hide();
                                                                    $('#InstallmentPaymentButton').hide();
                                                                    $('[id$=depositAmountPanel]').hide();
                                                                    $('[id$=LoandepositAmountPanel]').hide();
                                                                    $('[id$=proceedToLoan]').hide();
                                                                </script>
                                                            </div>
                                                        </apex:outputPanel>
                                                        <!-----------------------------------------------------------Late Fee Note ------------------------>
                                                        <apex:outputPanel rendered="{!applicableLateFee > 0}">
                                                            <div class="row">
                                                                <p class="LateFee">*Late Fee Rs.{!applicableLateFee} is applicable from
                                                                    <apex:outputText value="{0, date, MMMM d','  yyyy}">
                                                                        <apex:param value="{!LateFeeStartDate}" /></apex:outputText>
                                                                </p>
                                                            </div>
                                                        </apex:outPutPanel>
                                                        <!--------------------------------------------------------------end -------------------------------->
                                                    </div>

                                                    <apex:outputPanel rendered="{!showliveLectureBasedOnSY}" styleClass="livelectureSection" style="display:none;" layout="block">
                                                        <!-------------------------------------------------------------- Live Lectures Payment -------------------------------->
                                                        <div class="message-box text-center form-group padding10 margin">Payment - Live Lectures
                                                            <a class="icon-down-arrow toggleBtn" style="float: right;color:white" href="javascript:void(0);" data-id="paymentFoSection2"></a>
                                                        </div>
                                                        <div class="form-group paymentFoSection2">
                                                            <div class="row">
                                                                <div class="col-md-2">
                                                                    <strong>Payment For</strong>
                                                                </div>
                                                                <div class="col-md-10 row">
                                                                    <div class="btn-group liveLectureBtnGroup" style="padding:5px;" role="group" aria-label="Basic example">
                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfApplicablePaymentOption,'1SemLecturesFee')}">
                                                                            <button type="button" class="btn btn-secondary PaymentForLiveLectures mr5 m5  SemBundles" style="display:none;" data-mode="1" data-value="1SemLecturesFee">
                                                                                1 Semester – Rs. {!mapOfProductAndAmount['1SemLecturesFee']}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfApplicablePaymentOption,'2SemLecturesFee')}">
                                                                            <button type="button" class="btn btn-secondary PaymentForLiveLectures mr5 m5  SemBundles" style="display:none;" data-mode="2" data-value="2SemLecturesFee">
                                                                                Annual (2 Semesters) – Rs. {!mapOfProductAndAmount['2SemLecturesFee']}     
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!IF(CONTAINS(setOfApplicablePaymentOption,'3SemLecturesFee') && ((CONTAINS(setOfApplicablePaymentOption,'3SemFee') || CONTAINS(setOfApplicablePaymentOption,'MultipleSemFee')) && !AlreadyPaidFullFee && !AlreadyPaid4SemFee && !AlreadyPaid5SemFee),true,false)}">
                                                                            <button type="button" class="btn btn-secondary PaymentForLiveLectures mr5 m5 SemBundles" style="display:none;" data-mode="3" data-value="3SemLecturesFee">
                                                                                Multiple (3 Semesters) – Rs. {!mapOfProductAndAmount['3SemLecturesFee']}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfApplicablePaymentOption,'4SemLecturesFee')}">
                                                                            <button type="button" class="btn btn-secondary PaymentForLiveLectures mr5 m5 SemBundles" style="display:none;" data-mode="4" data-value="4SemLecturesFee">
                                                                                Program (All 4 Sems) – Rs. {!mapOfProductAndAmount['4SemLecturesFee']}
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <apex:outputpanel rendered="{!CONTAINS(setOfApplicablePaymentOption,'Custom')}">
                                                                            <button type="button" class="btn btn-secondary PaymentForLiveLectures mr5 m5" data-mode="5" data-value="Custom">
                                                                                Choose Subjects for {!semester}<apex:outputText value="{!CASE(MOD(VALUE(semester),10),1,"st",2,"nd",3,"rd","th")}"/> Semester
                                                                            </button>
                                                                        </apex:outputpanel>

                                                                        <button type="button" class="btn btn-secondary PaymentForLiveLectures mr5 m5" data-mode="6" data-value="No">
                                                                            No Live Lectures
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <!-------------------------------------------------------------- Choose Subjects -------------------------------->
                                                        <div class="SubjectSection hide">
                                                            <div class="message-box text-center form-group padding10 margin">Semester {!semester} 
                                                                <a class="icon-down-arrow toggleBtn" style="float: right;color:white" href="javascript:void(0);" data-id="paymentFoSection3"></a>
                                                            </div>
                                                            <div class="form-group paymentFoSection3">
                                                                <div class="row">
                                                                    <div class="col-md-2">
                                                                        <strong>Subjects</strong>
                                                                    </div>
                                                                    <div class="col-md-10 row">
                                                                        <div class="btn-group" style="padding:5px;" role="group" aria-label="Basic example">
                                                                            <apex:repeat value="{!mapOfCourseKeyVsCurrentCourseObj}" var="key">
                                                                                <button type="button" class="btn btn-secondary ChooseSubjects mr5 m5" data-mode="1" data-value="{!mapOfCourseKeyVsCurrentCourseObj[key].Student_Zone_Course_Id__c}">
                                                                                    {!mapOfCourseKeyVsCurrentCourseObj[key].Name}
                                                                                </button>
                                                                            </apex:repeat>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </apex:outputPanel>

                                                    <!-------------------------------------------------------------- Backlog Livw Lectures Payment -------------------------------->
                                                    <apex:outputPanel rendered="{!sizeOfMapOfBacklogCourseIdVsBacklogObject > 0}" layout="none">
                                                        <div class="">
                                                            <div class="message-box text-center form-group padding10 margin">Backlog Subjects
                                                                <a class="icon-down-arrow toggleBtn" style="float: right;color:white" href="javascript:void(0);" data-id="paymentFoSection6"></a>
                                                            </div>
                                                            <div class="form-group paymentFoSection6">
                                                                <div class="row">
                                                                    <div class="col-md-2">
                                                                        <strong>Subjects</strong>
                                                                    </div>
                                                                    <div class="col-md-10 row">
                                                                        <div class="btn-group" style="padding:5px;" role="group" aria-label="Basic example">
                                                                            <apex:repeat value="{!mapOfBacklogCourseIdVsBacklogObject}" var="key">
                                                                                <button type="button" class="btn btn-secondary ChooseBacklogSubjects mr5 m5" data-mode="1" data-value="{!mapOfBacklogCourseIdVsBacklogObject[key].courseId}">
                                                                                    SEM - {!mapOfBacklogCourseIdVsBacklogObject[key].sem} - {!mapOfBacklogCourseIdVsBacklogObject[key].subject}
                                                                                </button>
                                                                            </apex:repeat>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </apex:outputPanel>

                                                </div>

                                                <div class="col-md-4" >
                                                    <div class="message-box text-center form-group padding10 margin">My Cart</div>
                                                    <div class="form-group mycartClass">
                                                        <center><img src="{!URLFOR($Resource.emptyCart)}" width="90%"/></center>
                                                    </div>
                                                </div>
                                            </div>

                                            <!-----------------------------------------------------------------EMI Option for Capital Float ---------------------------------------------------------->
                                            <div class="form-wrapper" id="ShowEMISection" style="display:none;">
                                                <div class="message-box text-center form-group">EMI</div>
                                                <div class="form-group">
                                                    <div class="row">
                                                        <div class="col-md-3">
                                                            <div class="radio">
                                                                <strong>Payment For</strong>
                                                            </div>
                                                        </div>

                                                        <div class="col-md-6">
                                                            <div class="radio">
                                                                <label>
                                                                    <input type="radio" name="EMI" id="EMIPayment1" class="iCheckRadio" value="{!EMI_Processing_Fee }" data-mode="1" />
                                                                    <span>{!EMI_Processing_Fee } - (EMI)</span>
                                                                </label>
                                                            </div>
                                                        </div>

                                                    </div>

                                                </div>
                                            </div>
                                            <!---------------------------------------------------------------------End Of EMI Section ------------------------------------------------------------------->

                                            <!-----------------------------------------------------------------------------Installment Down Payment Section -------------------------------------------------------------------------------------->
                                            <div class="form-wrapper" id="InstallmentDownPaymentSection" style="display:none;">
                                                <div class="message-box text-center form-group">Make Installment Payment</div>
                                                <h5>(Minimum Amount payable is 20 % of the Amount opted or 5000 whichever is greater)</h5>
                                                <div class="form-group">
                                                    <!-------------------------------------------------------Down Payment ---------------------------------------------->
                                                    <apex:variable value="{!intTotalInstallmentApplicable + 1}" var="noOfInstallmentsApplicable" />
                                                    <div class="row">
                                                        <div class="col-md-6">
                                                            <input type="text" name="Down Payment" class="form-control numonly" id="downPaymentForInstallment" placeholder="Enter Down Payment Amount"
                                                            />
                                                            <p class="LateFee">* There will be Only {!noOfInstallmentsApplicable} Installments
                                                                Option Available</p>
                                                            <p class="LateFee" id="depositAmountPanel" style="display:none;">* Balance Amount To Be Pay Rs
                                                                <span id="balanceAmountToPay"></span>
                                                            </p>
                                                        </div>
                                                    </div>

                                                    <!-----------------------------------Installment Instruction ------------------------------>
                                                    <div class="clearfix"></div>
                                                    <apex:outputText value="{!objPaymentFormConfiguration.Installment_Disclaimer__c}" escape="false"></apex:outputText>

                                                </div>
                                            </div>
                                            <!----------------------------------------------------------------------------end of Installment Down Payment Section --------------------------------------------------------------------------------->

                                            <!-----------------------------------------------------------------------------Loan Down Payment Section -------------------------------------------------------------------------------------->
                                            <div class="form-wrapper" id="LoanPaymentSection" style="display:none;">
                                                <div class="message-box text-center form-group">Loan (EMI Summary)</div>
                                                <div class="form-group">
                                                    
                                                    <div class="row">
                                                        <div class="col-md-6 col-xs-12 col-sm-12">
                                                            <p class="downPayment">* Down Payment</p>
                                                            <input type="text" name="Down Payment" class="form-control numonly" id="downPaymentForLoanApplication" placeholder="Enter Down Payment Amount"
                                                            />
                                                            <p class="LateFee" id="LoandepositAmountPanel" style="display:none;">* Balance Amount To Be Pay Rs
                                                                <span id="LoanbalanceAmountToPay"></span>
                                                            </p>
                                                        </div>
                                                        <div class="col-md-6 col-xs-12 col-sm-12" style="display:none;" id="proceedtoLoanSection">
                                                            <apex:commandLink styleClass="btn btn-primary btn-lg btn-custom eduVanzProceed" id="ProceedtoLoan" onclick="return validateLoanApplicationBtn();"
                                                                action="{!proceedToDirectLoan}" value="Proceed To Loan Application"
                                                            />
                                                        </div>
                                                        <!-- <apex:outputPanel layout="none" rendered="{!IF(programSpecialization=='MBA (X)' || programSpecialization=='MBA - X' || programSpecialization=='MBA (WX)' || programSpecialization=='M.Sc.',true,false)}">
                                                            <p class="LateFee" style="float:none;">EMI Moratorium offered by only Propelld, EMI to start from July. For more info connect with your counsellor</p>
                                                        </apex:outputPanel> -->
                                                        
                                                        
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-3">
                                                            <apex:outputPanel styleClass="showFullFeeLoanOpt showZestLoanBtn" rendered="{!objPaymentFormConfiguration.Show_Zest_Loan_Option__c}" layout="block">
                                                                <button type="button" class="btn btn-primary loanButton zestLoanApp LoanBtn" data-value="zestLoanSection">Zest Loan Application</button>
                                                            </apex:outputPanel>
                                                            <apex:outputPanel styleClass="showEduVanzLoan showEduVanzLoanBtn" rendered="{!IF(objPaymentFormConfiguration.Show_Eduvaz_Loan_Option__c,true,false)}" layout="block">
                                                                <button type="button" class="btn btn-primary loanButton eduvanzLoanApp LoanBtn" data-value="eduvanzLoanSection">Eduvanz Loan Application</button>
                                                            </apex:outputPanel>
                                                            <apex:outputPanel styleClass="showLiquiLoansLoanBtn" rendered="{!IF(objPaymentFormConfiguration.Show_LiquiLoans_Loan_Option__c,true,false)}" layout="block">
                                                                <button type="button" class="btn btn-primary loanButton liquiloanApp LoanBtn" data-value="liquiloanLoanSection">LiquiLoans Application</button>
                                                            </apex:outputPanel>
                                                            <apex:outputPanel styleClass="showPropelldLoanBtn" rendered="{!objPaymentFormConfiguration.Show_Propelld_Loan_Option__c}" layout="block">
                                                                <button type="button" class="btn btn-primary loanButton propelldLoanApp LoanBtn" data-value="propelldLoanSection">Propelld Loan Application</button>
                                                            </apex:outputPanel>
                                                            <apex:outputPanel styleClass="showFullFeeLoanOpt showEzCredLoanBtn" rendered="{!objPaymentFormConfiguration.Show_Ezcred_Loan_Option__c}" layout="block">
                                                                <button type="button" class="btn btn-primary loanButton ezcredLoanApp LoanBtn" data-value="ezcredLoanSection">EzCred Loan Application</button>
                                                            </apex:outputPanel>
                                                            <apex:outputPanel styleClass="showFullFeeLoanOpt showGrayQuestLoanBtn" rendered="{!objPaymentFormConfiguration.Show_GrayQuest_Loan_Option__c}" layout="block">
                                                                <button type="button" class="btn btn-primary loanButton grayquestLoanApp LoanBtn" data-value="grayquestLoanSection">GrayQuest Loan Application</button>
                                                            </apex:outputPanel>
                                                            <apex:outputPanel styleClass="showAvanseLoanBtn" rendered="{!IF(objPaymentFormConfiguration.Show_Avanse_Loan_Option__c && hasAvanseProgramCode,true,false)}" layout="block">
                                                                <button type="button" class="btn btn-primary loanButton avanseLoanApp LoanBtn" data-value="avanseLoanSection">Avanse Loan Application</button>
                                                            </apex:outputPanel>
                                                        </div>
                                                        <div class="col-md-9">
                                                            <!-- Zest Loan Section begins here  -->
                                                            <div class="zestLoanSection LoanSection" style="display: none;">
                                                                <div class="message-box text-center form-group loanHeader">Zest Loan Application</div>
                                                                <div class="col-md-4" id="ZestLoanSection"></div>
                                                                <apex:outputPanel styleClass="col-md-8" rendered="{!IF(CONTAINS(programSpecialization,'MBA (WX)') || CONTAINS(programSpecialization,'MBA (X)') || CONTAINS(programSpecialization,'MBA - X'),false,true)}" layout="block">
                                                                    <apex:outputText value="{!objPaymentFormConfiguration.Zest_Loan_Payment_Disclaimer__c}" escape="false"></apex:outputText>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel styleClass="col-md-8" rendered="{!IF(CONTAINS(programSpecialization,'MBA (WX)') || CONTAINS(programSpecialization,'MBA (X)') || CONTAINS(programSpecialization,'MBA - X'),true,false)}" layout="block">
                                                                    <apex:outputText value="{!objPaymentFormConfiguration.Annual_Fee_Type_Disclaimer_for_Zest__c}" escape="false"></apex:outputText>
                                                                </apex:outputPanel>
                                                            </div>

                                                            <!-- EduVanz Loan Section begins here  -->
                                                            <div class="eduvanzLoanSection LoanSection" style="display: none;">
                                                                <div class="showEduVanzLoan">
                                                                    <div class="message-box text-center form-group loanHeader">EduVanz Loan Application</div>
                                                                    <div class="col-md-4" id="EduVanzLoanSection"></div>
                                                                    <apex:outputPanel rendered="{!!IF(objPaymentFormConfiguration.FeeTypeBased_Loan__c,true,false)}" layout="block">
                                                                        <div class="col-md-8 showOtherTypeLiquiLoan" style="display: none;">
                                                                            <apex:outputText value="{!objPaymentFormConfiguration.EduVanz_Loan_Payment_Disclaimer__c}" escape="false"></apex:outputText>
                                                                        </div>
                                                                        <div class="col-md-8 showFullFeeLoanLiquiLoan" style="display: none;">
                                                                            <apex:outputText value="{!objPaymentFormConfiguration.Annual_Fee_Type_Disclaimer_for_Eduvanz__c}" escape="false"></apex:outputText>
                                                                        </div>
                                                                    </apex:outputPanel>
                                                                    <apex:outputPanel rendered="{!IF(objPaymentFormConfiguration.FeeTypeBased_Loan__c,true,false)}" layout="block">
                                                                        <div class="LoanFullFeeDis" style="display: none;">
                                                                            <div class="col-md-8">
                                                                                <apex:outputText value="{!objPaymentFormConfiguration.EduVanz_Loan_Payment_Disclaimer__c}" escape="false"></apex:outputText>
                                                                            </div>
                                                                        </div>
                                                                        <div class="LoanAnnualFeeDis" style="display: none;">
                                                                            <div class="col-md-8">
                                                                                <apex:outputText value="{!objPaymentFormConfiguration.Annual_Fee_Type_Disclaimer_for_Eduvanz__c}" escape="false"></apex:outputText>
                                                                            </div>
                                                                        </div>
                                                                    </apex:outputPanel>
                                                                </div>
                                                            </div>

                                                            <!-- LiquiLoans Loan Section begins here  -->
                                                            <div class="liquiloanLoanSection LoanSection" style="display: none;">
                                                                <div class="message-box text-center form-group loanHeader">LiquiLoans Loan Application</div>
                                                                <div class="col-md-4" id="LiquiLoansLoanSection"></div>
                                                                <apex:outputPanel rendered="{!!IF(objPaymentFormConfiguration.FeeTypeBased_Loan__c,true,false)}" layout="block">
                                                                    <div class="col-md-8 showOtherTypeLiquiLoan" style="display: none;">
                                                                        <apex:outputText value="{!objPaymentFormConfiguration.LiquiLoans_Loan_Payment_Disclaimer__c}" escape="false"></apex:outputText>
                                                                    </div>
                                                                    <!-- <div class="col-md-8 showFullFeeLiquiLoan" style="display: none;">
                                                                        <apex:outputText value="{!objPaymentFormConfiguration.Annual_Fee_Type_Disclaimer__c}" escape="false"></apex:outputText>
                                                                    </div> -->
                                                                    <div class="col-md-8 showFullFeeLoanLiquiLoan" style="display: none;">
                                                                        <apex:outputText value="{!objPaymentFormConfiguration.Annual_Fee_Type_Disclaimer__c}" escape="false"></apex:outputText>
                                                                    </div>
                                                                    
                                                                </apex:outputPanel>
                                                                <apex:outputPanel rendered="{!IF(objPaymentFormConfiguration.FeeTypeBased_Loan__c,true,false)}" layout="block"> 
                                                                    <div class="LoanFullFeeDis" style="display: none;">
                                                                        <div class="col-md-8">
                                                                            <apex:outputText value="{!objPaymentFormConfiguration.LiquiLoans_Loan_Payment_Disclaimer__c}" escape="false"></apex:outputText>
                                                                        </div>
                                                                    </div>
                                                                    <div class="LoanAnnualFeeDis" style="display: none;">
                                                                        <div class="col-md-8">
                                                                            <apex:outputText value="{!objPaymentFormConfiguration.Annual_Fee_Type_Disclaimer__c}" escape="false"></apex:outputText>
                                                                        </div>
                                                                    </div>
                                                                </apex:outputPanel>
                                                            </div>

                                                            <!-- Avanse Loan Section begins here  -->
                                                            <div class="avanseLoanSection LoanSection" style="display: none;">
                                                                <div class="message-box text-center form-group loanHeader">Avanse Loan Application</div>
                                                                <div class="col-md-4" id="AvanseLoanSection"></div>
                                                                <apex:outputPanel rendered="{!IF(objPaymentFormConfiguration.FeeTypeBased_Loan__c,false,true)}" layout="block">
                                                                    <div class="col-md-8 showOtherTypeAvanseLoan" style="display: none;">
                                                                        <apex:outputText value="{!objPaymentFormConfiguration.Avanse_Loan_Payment_Disclaimer__c}" escape="false"></apex:outputText>
                                                                    </div>    
                                                                    <div class="col-md-8 showFullFeeLoanAvanse" style="display: none;">
                                                                        <apex:outputText value="{!objPaymentFormConfiguration.Annual_Fee_Type_Disclaimer_for_Avanse__c}" escape="false"></apex:outputText>
                                                                    </div>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel rendered="{!IF(objPaymentFormConfiguration.FeeTypeBased_Loan__c,true,false)}" layout="block">
                                                                    <div class="LoanFullFeeDis" style="display: none;">
                                                                        <div class="col-md-8">
                                                                            <apex:outputText value="{!objPaymentFormConfiguration.Avanse_Loan_Payment_Disclaimer__c}" escape="false"></apex:outputText>
                                                                        </div>
                                                                    </div>
                                                                    <div class="LoanAnnualFeeDis" style="display: none;">
                                                                        <div class="col-md-8">
                                                                            <apex:outputText value="{!objPaymentFormConfiguration.Annual_Fee_Type_Disclaimer_for_Avanse__c}" escape="false"></apex:outputText>
                                                                        </div>
                                                                    </div>
                                                                </apex:outputPanel>
                                                            </div>

                                                            <!-- Propelld Loan Section begins here  -->
                                                            <div class="propelldLoanSection LoanSection" style="display: none;">
                                                                <div class="message-box text-center form-group loanHeader">Propelld Loan Application</div>
                                                                <div class="col-md-4" id="PropelldLoanSection"></div>
                                                                <apex:outputPanel rendered="{!IF(objPaymentFormConfiguration.FeeTypeBased_Loan__c,false,true)}" layout="block">
                                                                    <div class="col-md-8 showOtherTypePropelldLoan" style="display: none;">
                                                                        <apex:outputText value="{!objPaymentFormConfiguration.Propelld_Loan_Payment_Disclaimer__c}" escape="false"></apex:outputText>
                                                                    </div>    
                                                                    <div class="col-md-8 showFullFeeLoanPropelld" style="display: none;">
                                                                        <apex:outputText value="{!objPaymentFormConfiguration.Annual_Fee_Type_Disclaimer_for_Propelld__c}" escape="false"></apex:outputText>
                                                                    </div>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel rendered="{!IF(objPaymentFormConfiguration.FeeTypeBased_Loan__c,true,false)}" layout="block">
                                                                    <div class="LoanFullFeeDis" style="display: none;">
                                                                        <div class="col-md-8">
                                                                            <apex:outputText value="{!objPaymentFormConfiguration.Propelld_Loan_Payment_Disclaimer__c}" escape="false"></apex:outputText>
                                                                        </div>
                                                                    </div>
                                                                    <div class="LoanAnnualFeeDis" style="display: none;">
                                                                        <div class="col-md-8">
                                                                            <apex:outputText value="{!objPaymentFormConfiguration.Annual_Fee_Type_Disclaimer_for_Propelld__c}" escape="false"></apex:outputText>
                                                                        </div>
                                                                    </div>
                                                                </apex:outputPanel>
                                                            </div>

                                                            <!-- EzCred Loan Section begins here  -->
                                                            <div class="ezcredLoanSection LoanSection" style="display: none;">
                                                                <div class="message-box text-center form-group loanHeader">EzCred Loan Application</div>
                                                                <div class="col-md-4" id="EzCredLoanSection">
                                                                </div>
                                                                <div class="col-md-8">
                                                                    <apex:outputText value="{!objPaymentFormConfiguration.Ezcred_Loan_Payment_Disclaimer__c}" escape="false"></apex:outputText>
                                                                </div>
                                                            </div>

                                                            <!-- GrayQuest Loan Section begins here  -->
                                                            <div class="grayquestLoanSection LoanSection" style="display: none;">
                                                                <div class="message-box text-center form-group loanHeader">GrayQuest Loan Application</div>
                                                                <div class="col-md-4" id="GrayQuestLoanSection"></div>
                                                                <apex:outputPanel rendered="{!IF(objPaymentFormConfiguration.FeeTypeBased_Loan__c,false,true)}" layout="block">
                                                                    <div class="col-md-8 showOtherTypeGrayQuestLoan" style="display: none;">
                                                                        <apex:outputText value="{!objPaymentFormConfiguration.GrayQuest_Loan_Payment_Disclaimer__c}" escape="false"></apex:outputText>
                                                                    </div>    
                                                                    <div class="col-md-8 showFullFeeLoanGrayQuest" style="display: none;">
                                                                        <apex:outputText value="{!objPaymentFormConfiguration.Full_Fee_Loan_GrayQuest_Disclaimer__c}" escape="false"></apex:outputText>
                                                                    </div>
                                                                </apex:outputPanel>
                                                                <apex:outputPanel rendered="{!IF(objPaymentFormConfiguration.FeeTypeBased_Loan__c,true,false)}" layout="block">
                                                                    <div class="LoanFullFeeDis" style="display: none;">
                                                                        <div class="col-md-8">
                                                                            <apex:outputText value="{!objPaymentFormConfiguration.GrayQuest_Loan_Payment_Disclaimer__c}" escape="false"></apex:outputText>
                                                                        </div>
                                                                    </div>
                                                                    <div class="LoanAnnualFeeDis" style="display: none;">
                                                                        <div class="col-md-8">
                                                                            <apex:outputText value="{!objPaymentFormConfiguration.Full_Fee_Loan_GrayQuest_Disclaimer__c}" escape="false"></apex:outputText>
                                                                        </div>
                                                                    </div>
                                                                </apex:outputPanel>
                                                            </div>
                                                            <!--End    -->
                                                        </div>
                                                    </div>
                                                    <div class="clearfix"></div>
                                                    <!------------------------------ Loan EMI Section ------------------------>
                                                </div>
                                            </div>
                                            <!------------------------------------------------------------Select Payment Mode -------------------------------------------->
                                            <div class="clearfix"></div>
                                            <div class="message-box text-center form-group padding10" id="modOfPaymentMessgaeId">Mode of Payment</div>
                                            <div class="form-group modeOfPayment">
                                                <div class="row">
                                                    <div class="col-sm-3 col-md-3">
                                                        <div class="radio">
                                                            <strong>Select a mode of payment</strong>
                                                        </div>
                                                    </div>

                                                    
                                                    <apex:outputPanel layout="block" id="onlineRadionButton" style="display:none;" styleClass="col-sm-2 col-md-2">
                                                        <div class="radio">
                                                            <label>
                                                                <input type="radio" name="PaymentMode" id="PaymentMode1" class="iCheckRadio" value="Online" data-mode="1" required="required"
                                                                />
                                                                <span>Online</span>
                                                            </label>
                                                        </div>
                                                    </apex:outputPanel>
                                                    
                                                    <apex:outputPanel layout="block" id="DDRadionButton" style="display:none;" styleClass="col-sm-2 col-md-2" rendered="{!IF(!allowPayment, true, false)}">
                                                    <!-- <div class="col-sm-2 col-md-2"> -->
                                                        <div class="radio">
                                                            <label>
                                                                <input type="radio" name="PaymentMode" id="PaymentMode2" class="iCheckRadio" data-mode="2" value="Demand Draft" />
                                                                <span>Demand Draft</span>
                                                            </label>
                                                        </div>
                                                    <!-- </div> -->
                                                    </apex:outputPanel>

                                                    <apex:outputPanel layout="block" id="NEFTRadionButton" style="display:none;" styleClass="col-sm-1 col-md-1" rendered="{!IF(!IsHOForMakingPayment && false && !allowPayment,true,false)}">
                                                        <!-- <div class="col-sm-2 col-md-2"> -->
                                                        <div class="radio">
                                                            <label>
                                                                <input type="radio" name="PaymentMode" id="PaymentMode10" class="iCheckRadio" data-mode="2" value="NEFT" />
                                                                <span>NEFT</span>
                                                            </label>
                                                        </div>
                                                        <!-- </div> -->
                                                    </apex:outputPanel>

                                                    <apex:outputPanel rendered="{!IF(!loanWindowClosed && !allowPayment,true,false)}" layout="block" id="LoanRadionButton" style="display:none;" styleClass="col-sm-2 col-md-2">
                                                            <div class="radio">
                                                                <label>
                                                                    <input type="radio" name="PaymentMode" id="PaymentMode3" class="iCheckRadio" data-mode="2" value="Loan" />
                                                                    <span>Loan</span>
                                                                </label>
                                                            </div>
                                                    </apex:outputPanel>
                                                    
                                                    <apex:outputPanel rendered="{!IF(objPaymentFormConfiguration.show_Installment__c && !allowPayment,true,false)}">
                                                        <div class="col-sm-2 col-md-2" style="display:none;" id="InstallmentRadionButton">
                                                            <div class="radio">
                                                                <label>
                                                                    <input type="radio" name="PaymentMode" id="PaymentMode5" class="iCheckRadio" data-mode="2" value="Installment" />
                                                                    <span>Installment</span>
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </apex:outputPanel>

                                                </div>
                                            </div>

                                            <!-------------------------------------------------------------end  ------------------------------------------------------------>

                                            <!-------------------------------------------- Error Popup------------------------------------------------>
                                            <div style="display:none;" id="errorPopupPanel">
                                                <div class="modal popup-wrapper">
                                                    <div class="modal-dialog">
                                                        <div class="modal-content">
                                                            <div class="modal-header">
                                                                <h4 class="modal-title">Important Message</h4>
                                                            </div>
                                                            <div class="modal-body">
                                                                <p id="errorMessage"></p>
                                                            </div>
                                                            <div class="modal-footer">
                                                                <div class="btn" onclick="hidePopup();">I Agree</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="overlay"></div>
                                            </div>

                                            <!--------------------------------------------------------------------- DD Details ---------------------------------------------------------->
                                            <apex:outputPanel rendered="{!!paymentWindowClosed && !IsICForMakingPayment}">
                                                <div class="row paymentOptions" id="DDNote">
                                                    <p class="note">
                                                        <span style="color:red;">Note:</span> Kindly personally submit the Demand Draft to: {!centerAddressForDD}</p>
                                                </div>
                                            </apex:outputPanel>

                                            <div class="clearfix"></div>
                                            <apex:outputPanel rendered="{!!paymentWindowClosed && IsICForMakingPayment}">
                                                <div class="row paymentOptions" id="DDNote">
                                                    <div class="col-md-4">
                                                        <div class="form-group required-label">
                                                            <apex:inputField id="ddNumber" value="{!objPayment.nm_DemandDraftNumber__c}" styleClass="form-control notnull" html-placeholder="Demand Draft Number"
                                                            />
                                                        </div>
                                                    </div>

                                                    <div class="col-md-4">
                                                        <div class="form-group required-label">
                                                            <apex:inputField id="ddBankName" value="{!objPayment.nm_NameoftheBank__c}" styleClass="form-control notnull" html-placeholder="Name Of the Bank"
                                                            />
                                                        </div>
                                                    </div>

                                                    <div class="col-md-4">
                                                        <div class="form-group required-label">
                                                            <div class="input-group date" data-date-format="DD/MM/YYYY" id="datetimepicker1">
                                                                <span class="dateInput dateOnlyInput">
                                                                    <apex:inputText value="{!objPayment.nm_DemandDraftDate__c}" styleClass="form-control notnull" id="dob" html-placeholder="Demand Draft Date"
                                                                    />
                                                                </span>
                                                                <span class="input-group-addon">
                                                                    <span class="glyphicon glyphicon-calendar"></span>
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-4">
                                                        <div class="form-group required-label">
                                                            <apex:inputField id="ddBankLocation" value="{!objPayment.nm_BankLocation__c}" styleClass="form-control notnull" html-placeholder="Bank Location"
                                                            />
                                                        </div>
                                                    </div>

                                                    <div class="col-md-4">
                                                        <div class="form-group required-label">
                                                            <div class="input-group date" data-date-format="DD/MM/YYYY" id="datetimepicker2">
                                                                <span class="dateInput dateOnlyInput">
                                                                    <apex:inputText value="{!objPayment.nm_DispatchDate__c}" styleClass="form-control notnull" id="doc1" html-placeholder="Dispatch Date"
                                                                    />
                                                                </span>
                                                                <span class="input-group-addon">
                                                                    <span class="glyphicon glyphicon-calendar"></span>
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </apex:OutPutPanel>
                                            <!--------------------------------------------------------------end -------------------------------------------------------------------------->
                                            

                                            <!--------------------------------------------------------------------- NEFT Details ---------------------------------------------------------->
                                            <apex:outputPanel rendered="{!!paymentWindowClosed && !IsHOForMakingPayment}">
                                                <div class="row paymentOptions" id="NEFTNote">
                                                    <p class="note">
                                                        <span style="color:red;">Note:</span> Kindly personally submit the NEFT to: {!centerAddressForDD}</p>
                                                </div>
                                            </apex:outputPanel>
                                            
                                            <div class="clearfix"></div>
                                            <apex:outputPanel rendered="{!!paymentWindowClosed && IsHOForMakingPayment}">
                                                <div class="row paymentOptions" id="NEFTNote">
                                                    <div class="col-md-4">
                                                        <div class="form-group required-label">
                                                            <apex:inputField id="NEFTNumber" value="{!objPayment.nm_TransactionID__c}" styleClass="form-control notnull" html-placeholder="Transation Number"
                                                            />
                                                        </div>
                                                    </div>
                                            
                                                    <div class="col-md-4">
                                                        <div class="form-group required-label">
                                                            <div class="input-group date" data-date-format="DD/MM/YYYY" id="datetimepicker3">
                                                                <span class="dateInput dateOnlyInput">
                                                                    <apex:inputText value="{!objPayment.nm_TransactionDate__c}" styleClass="form-control notnull" id="doc2" html-placeholder="Transation Date"
                                                                    />
                                                                </span>
                                                                <span class="input-group-addon">
                                                                    <span class="glyphicon glyphicon-calendar"></span>
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </apex:OutPutPanel>
                                            <!--------------------------------------------------------------end -------------------------------------------------------------------------->
                                            <div class="clearfix"></div>
                                            <apex:outputPanel rendered="{!!paymentWindowClosed}">
                                                <div class="row">
                                                    <div class="col-sm-3">
                                                        <apex:commandButton value="Make Payment" styleClass="btn pgSubmit paymentOptions" id="PayBtn" onclick="return GoToPayment();" />
                                                    </div>

                                                    <apex:outputPanel rendered="{!IsICForMakingPayment}">
                                                        <div class="col-sm-3">
                                                            <apex:commandButton value="Save DD Details" styleClass="btn pgSubmit paymentOptions" id="PayBtndd" action="{!SaveDD}" />
                                                        </div>
                                                    </apex:OutPutPanel>

                                                    <apex:outputPanel rendered="{!IsHOForMakingPayment && false}">
                                                        <div class="col-sm-3">
                                                            <apex:commandButton value="Save NEFT Details" styleClass="btn pgSubmit paymentOptions" id="PayBtnNEFT" action="{!SaveDD}" />
                                                        </div>
                                                    </apex:OutPutPanel>
                                                    
                                                    <apex:outputPanel >
                                                        <div class="col-sm-3" id="showZestButton">
                                                            <button type="button" id="proceedToLoan" class="btn btn-default paymentOptions">Proceed</button>
                                                        </div>
                                                    </apex:OutPutPanel>

                                                    <div class="col-sm-3 paymentOptions" id="InstallmentPaymentButton" style="display:none;">
                                                        <button type="button" id="PayBtnInstallment" class="btn btn-default ">Installment</button>
                                                    </div>

                                                    <div class="col-sm-3">
                                                        <apex:commandButton value="Print Form" styleClass="btn btn-default" id="PrintForm" onclick="PrintForm();" />
                                                    </div>

                                                    <div class="col-sm-3" id="showBackToHomeButton" style="display:none;">
                                                        <button type="button" onclick="backToPaymentSection();" class="btn btn-default">Back</button>
                                                    </div>
                                                </div>
                                            </apex:OutPutPanel>
                                            <div></div>
                                            <br></br>
                                            <h4>
                                                <span style="color:red;">Note:</span> Admission Processing Fee (Registration Fee) is non refundable</h4>
                                            <!--------------------------Window Closed Message -------------------------------------->
                                            <apex:outputPanel rendered="{!paymentWindowClosed}">
                                                <apex:outputText value="{!paymentClouserMessage}" style="float:left;"></apex:outputText>
                                            </apex:outputPanel>


                                            <!------------------------------------------------end -------------------------------------------------------------->

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </apex:outputPanel>
            </form>

            <!----------------------------------------------Payment GetWay Options ---------------------------------------------->
            <div style="display:none;" id="PaymentGateWayOption">
                <div class="modal popup-wrapper">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Important Message</h4>
                            </div>
                            <div class="modal-body">
                                <p> Select Payment GateWay </p>
                                <div class="cc-selector-2 row padding10">
                                    <apex:outputPanel rendered="{!objPaymentFormConfiguration.BillDesk_Gateway__c}" layout="block" styleclass="col-sm-3 text-center">
                                        <input id="billDeskgateway" type="radio" name="paymentGatewayGrp" value="BillDesk GateWay" />
                                        <label class="drinkcard-cc billDeskgateWay" for="billDeskgateway" />
                                    </apex:outputPanel>

                                    <apex:outputPanel rendered="{!objPaymentFormConfiguration.HDFC_Gateway__c}" layout="block" styleclass="col-sm-3 text-center">
                                        <input id="hdfcgateway" type="radio" name="paymentGatewayGrp" value="HDFC GateWay" />
                                        <label class="drinkcard-cc hdfcgateWay" for="hdfcgateway" />
                                    </apex:outputPanel>
                                    
                                    <apex:outputPanel rendered="{!objPaymentFormConfiguration.Paytm_Gateway__c}" layout="block" styleclass="col-sm-3 text-center">
                                        <input id="paytmgateway" type="radio" name="paymentGatewayGrp" value="Paytm GateWay" />
                                        <label class="drinkcard-cc paytmgateWay" for="paytmgateway" />
                                    </apex:outputPanel>

                                    <apex:outputPanel rendered="{!objPaymentFormConfiguration.Razorypay_Gateway__c}" layout="block" styleclass="col-sm-3 text-center">
                                        <input id="razorpaygateway" type="radio" name="paymentGatewayGrp" value="Razorpay GateWay" />
                                        <label class="drinkcard-cc razorpaygateWay" for="razorpaygateway" />
                                    </apex:outputPanel>

                                    <apex:outputPanel rendered="{!objPaymentFormConfiguration.ICICI_Gateway__c}" layout="block" styleclass="col-sm-3 text-center">
                                        <input id="icicigateway" type="radio" name="paymentGatewayGrp" value="ICICI GateWay" />
                                        <label class="drinkcard-cc icicigateway" for="icicigateway" />
                                    </apex:outputPanel>
                                </div>
                                <!-- <div>
                                    <p>Note: currently we are facing low success rate for payment made using billdesk</p>
                                </div> -->
                            </div>
                            <div class="modal-footer">
                                <div class="row">
                                    <div class="col-sm-4" style="float:right">
                                        <apex:commandButton styleclass="btn btn-default" value="Cancel" id="btnCancel" onclick="hideme();" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="overlay"></div>
            </div>
            <!------------------------------------------------end -------------------------------------------------------------->

            <!-----------------------------------------------------Error Poup---------------------------------------------------->
            <apex:outputPanel id="errorPoupId" rendered="{!strSecToShow =='PopUpError' || strSecToShow == 'error'}">
                <div class="modal popup-wrapper">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Important Message:</h4>
                            </div>
                            <div class="modal-body">
                                <p>{!errMessages}</p>
                            </div>
                            <div class="modal-footer">
                                <div class="col-sm-4 text-right">
                                    <apex:commandButton styleclass="btn btn-default" value="I Agree" id="btnAgree" onclick="hideme();" rendered="{!returnUrl == null || returnUrl =''}"
                                    />
                                    <apex:outputPanel rendered="{!returnUrl !=null }">
                                        <a href="{!returnUrl}" class="btn btn-default">I Agree</a>
                                    </apex:outputPanel>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="overlay"></div>
            </apex:outPutPanel>

        </apex:form>
            <!----------------------------------------------------end Of Error poup----------------------------------------------->

        

        <!--------------------------------------------AddDisclaimer------------------------------------------------>
        <div style="display:none;" id="AddDisclaimer">
            <div class="modal popup-wrapper">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Disclaimer:</h4>
                        </div>
                        <div class="modal-body">
                            <p>Fee payment does not guarantee admission. Admission confirmation is subject to document submission
                                by the Student and document approval by the University as per the Eligibility Criteria defined
                                by the University. In case documents are not submitted or get rejected after fee payment,
                                the tution fee will be refunded to the student by the University as per the refund policies.</p>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn" id="disclaimerBtn">I Agree</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="overlay"></div>
        </div>

        <apex:outputPanel rendered="{!IF(IsReregistartion = false && stagename != 'Closed lost',true,false)}">
            <div id="myModal1" class="modal fade" style="padding: 255px 50px 75px 100px;">
                <div class="modal-dialog ">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color: #aa1f24;">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="color:white;">×</button>
                            <h4 class="modal-title text-center" style="color:white;">Confirm Details</h4>
                        </div>
                        <div class="modal-body">
                            <apex:form >
                                <div class="row" style="margin-left:0">
                                    <div class="form-group col-md-6">
                                        <label>First Name:</label>
                                        <p>{!FirstName}</p>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label>Last Name:</label>
                                        <p>{!LastName}</p>
                                    </div>
                                </div>
                                <div class="row" style="margin-left:0">
                                    <!-- <div class="form-group col-md-6">
                                        <label>Your Authorised Enrollment Partner:</label>
                                        <p>{!ICName}</p>
                                    </div> -->
                                    <div class="form-group col-md-6">
                                        <label>Email Id:</label>
                                        <p>{!studentEmail}</p>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label>Mobile no. :</label>
                                        <p>{!studentMobileNo}</p>
                                    </div>
                                </div>
                                <div class="row" style="margin-left:0">
                                    <!-- <div class="form-group col-md-6">
                                        <label>Email Id:</label>
                                        <p>{!studentEmail}</p>
                                    </div> -->
                                    <div class="form-group col-md-6">
                                        <label>Program Category:</label>
                                        <p>{!programCategory}</p>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label>Program Name:</label>
                                        <p>{!programName}</p>
                                    </div>
                                </div>
                                <div class="row" style="margin-left:0">
                                   <!-- <div class="form-group col-md-6">
                                        <label>Program Name:</label>
                                        <p>{!programName}</p>
                                    </div> -->
                                    <div class="form-group col-md-6">
                                        <label>Eligiblity Criteria:</label>
                                        <p>{!eligibility}</p>
                                    </div>
                                </div>
                                <div class="row" style="margin-left:0">
                                    <div class="form-group col-md-6">
                                        <label>Shipping Address:</label>
                                        <p>
                                            <apex:outputText value="{!studentShippingAddress}" />
                                        </p>
                                    </div>
                                </div>
                            </apex:form>
                            <div class="row">
                                <div class="form-group col-md-6 col-sm-3 col-xs-3 text-right">
                                    <button type="submit" class="btn btn-primary btn-lg" data-dismiss="modal">I Agree</button>
                                </div>
                                <div class="form-group col-md-6 col-sm-3 col-xs-3 text-left">
                                    <a href="{!$Label.Site_Url}nmlogin_new?type=registration" class="btn btn-primary btn-lg">Logout</a>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer" style="text-align:left;">
                            <p>Note: If you want to change any of the above details kindly call our toll free number 18001025136
                                or mail your request on
                                <a href="mailto:ngasce@nmims.edu" style="color:#337ab7;">ngasce@nmims.edu</a>.</p>
                        </div>
                    </div>
                </div>
            </div>
        </apex:outputPanel>

        <div id="ChangeDetailModal" class="modal fade" style="padding: 255px 50px 75px 100px;">
            <div class="modal-dialog ">
                <div class="modal-content">
                    <div class="modal-header" style="background-color: #aa1f24;">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="color:white;">×</button>
                        <h4 class="modal-title text-center" style="color:white;">Confirm Details</h4>
                    </div>
                    <div class="modal-body">
                        <p>Note: If you want to change any of the above details kindly call our toll free number 18001025136
                            </p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary btn-lg" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!---------------------------------------------------------------------------------------------------------------------->


        <!-- Footer Component -->
        <c:FooterPage />
        <!-- Footer Component -->

        <!-- Search Popup -->
        <div class="modal fade" id="searchModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-body">
                        <form class="form-inline" id="">
                            <input type="text" class="form-control" id="searchInput" placeholder="" />
                            <button type="" class="icon-search"></button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="transparent-background loaderPanelDD" style="display:none;">
            <div class="loader-center">
                <div class="loader">Processing</div>
                <div class="loaderMessage">
                    <span>Please wait for while...</span>
                </div>
            </div>
        </div>
        <!--All java script  -->
        <apex:includeScript value="{!URLFOR($Resource.NewResource, 'NewResource/assets/js/jquery-1.11.2.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.NewResource, 'NewResource/assets/js/main.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.NewResource, 'NewResource/assets/js/bootstrap.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.NewResource, 'NewResource/assets/js/jquery.validate.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.NewResource, 'NewResource/assets/js/moment.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.NewResource, 'NewResource/assets/js/bootstrap-datetimepicker.js')}" />
        <script type="text/javascript" src="{!URLFOR($Resource.NewResourceRevised, 'NewResourceRevised/assets/js/fontawesome.min.js')}" data-auto-replace-svg="nest"/>
        <script src="../../soap/ajax/45.0/connection.js" type="text/javascript"></script>
        <script src="../../soap/ajax/45.0/apex.js" type="text/javascript"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min.js" integrity="sha512-3j3VU6WC5rPQB4Ld1jnLV7Kd5xr+cq9avvhwqzbH/taCRNURoeEpoPBK9pDyeukwSxwRPJ8fDgvYXd6SkaZ2TA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

        <!--------------------------------------------------------------------Script ------------------------------------------>
        <apex:outPutPanel id="ProductScriptSection">
            <script>
                function getApplicableAmountForPayment() {
                    let jsonStringOfProductVsAmount = $('[id$=jsonStringOfProductVsAmount]').val();
                    let mapOfProductVsAmount = JSON.parse(jsonStringOfProductVsAmount);
                    let applicableAmount = 5000;
                    let applicableLateFee = '{!applicableLateFee}';
                    let registrationFeePaid = '{!AlreadyPaidRegistrationFee}';
                    let applicableCareerServiceFee = '{!applicableCareerServiceFee}';
                    let applicableCourseraFee = '{!objCoursera.applicableCourseraFee}';
                    let paymentMode = $('[id$=hdnPaymentMode]').val();
                    let selectedOption = $('[id$=hdnPaymentOption]').val();
                    let registrationFee = 0;

                    //if(paymentMode == 'Installment' || paymentMode == 'Loan'){
                    if (checkMode == 'Installment' || checkMode == 'Loan') {
                        selectedOption = selectedOption.includes('-') ? selectedOption.split('-')[1] : selectedOption;
                        console.log('selectedOption -->' + selectedOption);
                    }
                    if (selectedOption != undefined && mapOfProductVsAmount.hasOwnProperty(selectedOption)) {
                        applicableAmount = mapOfProductVsAmount[selectedOption];
                    }

                    if (registrationFeePaid == 'false') {
                        registrationFee = parseFloat('{!mapOfProductAndAmount['Registration Fee']}');
                        console.log('registrationFee ---' + registrationFee);
                    }

                    // to calculate the late fee with product amount for installment and loan.
                    if (parseFloat(applicableLateFee) > 0) {
                        applicableAmount = parseFloat(applicableAmount) + parseFloat(applicableLateFee);
                        console.log('applicableAmount with Late Fee ---' + applicableAmount);
                    }

                    let total_amount = (parseInt(applicableAmount) + parseInt(applicableCareerServiceFee) + parseInt(registrationFee) + parseInt(applicableCourseraFee));
                    console.log('applicableAmount -->' + total_amount);
                    return total_amount;

                    // return applicableAmount;
                }
                function getApplicableAmountForSpecificPayment(paymentFor) {
                    let jsonStringOfProductVsAmount = $('[id$=jsonStringOfProductVsAmount]').val();
                    let mapOfProductVsAmount = JSON.parse(jsonStringOfProductVsAmount);
                    paymentFor = paymentFor == 'Registration' ? 'Registration Fee' : paymentFor;
                    paymentFor = paymentFor == 'Initial Admission Payment' ? 'InitialAdmissionFee' : paymentFor;
                    console.log(mapOfProductVsAmount, paymentFor);
                    return mapOfProductVsAmount.hasOwnProperty(paymentFor) ? mapOfProductVsAmount[paymentFor] : 0;
                }

                function getApplicableAmountForLiveLectures() {
                    let jsonStringOfProductVsAmount = $('[id$=jsonStringOfProductVsAmount]').val();
                    let mapOfProductVsAmount = JSON.parse(jsonStringOfProductVsAmount);
                    let selectedOptionLiveLectures = $('[id$=hdnLiveLecturesOption]').val();
                    let applicableAmountLL = 0;
                    let lstOfLiveLectureFeeType = ['1SemLecturesFee','2SemLecturesFee','3SemLecturesFee','4SemLecturesFee'];
                    console.log('selectedOptionLiveLectures ==>'+selectedOptionLiveLectures);
                    if (selectedOptionLiveLectures != undefined) {
                        if (lstOfLiveLectureFeeType.includes(selectedOptionLiveLectures)) {
                            applicableAmountLL = mapOfProductVsAmount[selectedOptionLiveLectures];
                        } else if (selectedOptionLiveLectures == 'Custom') {
                            let singleSub = mapOfProductVsAmount.hasOwnProperty('Live Lectures') ? mapOfProductVsAmount['Live Lectures'] : 0;
                            let selectedSub = $('[id$=hdnCourseList]').val();
                            let selectedOptionArray = selectedSub != null && selectedSub != '' ? selectedSub.split(',') : [];
                            applicableAmountLL = singleSub * selectedOptionArray.length;
                        }
                    }
                    return applicableAmountLL;
                }

                function getApplicableAmountForBacklog() {
                    let jsonStringOfProductVsAmount = $('[id$=jsonStringOfProductVsAmount]').val();
                    let mapOfProductVsAmount = JSON.parse(jsonStringOfProductVsAmount);
                    let applicableAmountLL = 0;
                    let singleSub = mapOfProductVsAmount.hasOwnProperty('Backlog') ? mapOfProductVsAmount['Backlog'] : 0;
                    let selectedSub = $('[id$=hdnBacklogList]').val();
                    let selectedOptionArray = selectedSub != null && selectedSub != '' ? selectedSub.split(',') : [];
                    applicableAmountLL = singleSub * selectedOptionArray.length;

                    console.log('applicableAmountLL ==>' + applicableAmountLL);
                    return applicableAmountLL;
                }

            </script>
        </apex:outPutPanel>

        <script>
            //Global variable.
            //To check if Loan is selected
            var checkMode = '';
            var TuitionPaymentType = '';
            var subventionSchemePrograms = '{!subventionPrograms}';
            var onLoadQuery = true;
            window.cartMap = new Map();
            window.loanSchemeObject  = "";
            window.loanSpecificObject = ""; 
            window.FeeTypeValue = "";
            // For to escape the originalEvent Check 
            var escapeOriginalEvent = false; 

            if ('{!stagename}' == 'Closed lost') {
                popupError();
            }

            console.log('cookie found..'+$.cookie("studentsession")+' SessionChecksum '+'{!SessionChecksum}');
            if($.cookie("studentsession") != 'null' && $.cookie("studentsession") && '{!IsICForMakingPayment}' == 'false'){
                // console.log('cookie found..'+$.cookie("studentsession")+' SessionChecksum '+'{!SessionChecksum}');
                // console.log('studentsessionExpire '+$.cookie("studentsessionExpire"));
                let encryptedCookie = $.cookie("studentsession");
                let sesssiondate = new Date($.cookie("studentsessionExpire"));
                let today = new Date();
                // console.log('sesssiondate '+sesssiondate+' today '+today);
                // console.log('sesssiondate.getTime() '+sesssiondate.getTime()+' today.getTime() '+today.getTime());
                var diff = Math.abs(sesssiondate - today);
                var minutes = Math.floor((diff/1000)/60);
                var seconds = Math.floor(diff/1000);
                // console.log('diff '+diff+' minutes '+minutes);
                if(sesssiondate.getTime() > today.getTime()){
                    console.log('session not expired...');
                    display1 = document.querySelector('#sessionTimeForDesk');
                    display2 = document.querySelector('#sessionTimeForMobile');
                    startTimer(seconds, display1);
                    startTimer(seconds, display2);
                }else{
                    console.log('session expired...');
                }
                // let decryptedCookie = crypt.decrypt(encryptedCookie);
                if(encryptedCookie != '{!SessionChecksum}'){
                    alert('Cookie value not matched...');
                    var type = '{!IsReregistartion}' == 'true' ? "reregistration" : "registration";
                    window.location.replace("/apex/nmLogin_new?type="+type);
                }
            }else if('{!IsICForMakingPayment}' == 'false' && ($.cookie("studentsession") == 'undefined' || $.cookie("studentsession") == null) ){
                alert('Session Expired, please Sign-In again to continue..');
                var type = '{!IsReregistartion}' == 'true' ? "reregistration" : "registration";
                window.location.replace("/apex/nmLogin_new?type="+type);
            }else{
                console.log('fail all condition..'+$.cookie("studentsession"));
            }

            function destroyCookie(){
                if($.cookie("studentsession") != 'null'){
                   $.cookie('studentsession', null, { path: '/' });
                   $.cookie('studentsessionExpire', null, { path: '/' });
                   return true;
                }
                return false;
            }


            function startTimer(duration, display) {
                console.log('duration '+duration);
                var timer = duration, minutes, seconds;
                var interval = setInterval(function () {
                    minutes = parseInt(timer / 60, 10);
                    seconds = parseInt(timer % 60, 10);

                    minutes = minutes < 10 ? "0" + minutes : minutes;
                    seconds = seconds < 10 ? "0" + seconds : seconds;
                    // console.log('minutes '+minutes+' seconds '+seconds+' timer '+timer);
                    if (display) {
                        display.textContent = minutes + ":" + seconds;
                    }
                    if (--timer < 0) {
                        alert('Session Expired, please Sign-In again to continue..');
                        var type = '{!IsReregistartion}' == 'true' ? "reregistration" : "registration";
                        clearInterval(interval);
                        window.location.replace("/apex/nmLogin_new?type="+type);
                    }
                }, 1000);
            }
            
            function PrintForm() {
                var printPageUrl = '';
                if ('{!IsReregistartion}' == 'true') {
                    printPageUrl = '/apex/PrintReRegistrationForm?sem={!semester}&id={!recordId}';
                } else if ('{!opportunityId}' != '' && '{!opportunityId}' != null) {
                    printPageUrl = '/apex/nmPrintAdmissionForm?id={!objAccount.id}';
                } else {
                    printPageUrl = '/apex/nm_PrintRegistrationForm?id={!recordId}';
                }

                window.open(printPageUrl, '_blank');
            }

            function GoToPayment() {

                if ($("input[name='PaymentMode']:checked").val()) {
                    var selectedPaymentOption = $('[id$=hdnPaymentOption]').val();
                    var downpaymentVal = $('[id$=downPaymentForLoanApplication]').val();
                    var loanType = $('[id$=hdnLoanType]').val();
                    if (selectedPaymentOption.includes('DownPayment') && $('input[name=EMIOption]:checked').length <= 0) {
                        alert('Kindly select EMI Option');
                        return false;
                    } else if (selectedPaymentOption.includes('EMI') && $('input[name=EMI]:checked').length <= 0) {
                        alert('Kindly select EMI Payment Option');
                        return false;
                    } else if (selectedPaymentOption.includes('DownPayment') && downpaymentVal == 0 && loanType != null) {
                        alert('Invalid Down payment amount !');
                        return false;
                    }
                    $('[id$=PaymentGateWayOption]').css("display", "block");
                } else {
                    showHtmlMessage('Please select the payment mode');
                }

                return false;
            }

            function hideme() {
                $('[id$=PaymentGateWayOption]').css("display", "none");
                $('[id$=errorPoupId]').css("display", "none");
            }

            function backToPaymentSection() {
                $('[id$=paymentOptionSection]').show();
                $('[id$=InstallmentDownPaymentSection]').hide();
                $('[id$=LoanPaymentSection]').hide();
                $('[id$=ShowEMISection]').hide();
                $('[id$=showBackToHomeButton]').hide();
                $('[id$=hdnTenure]').val('');
                $('[id$=hdnEMI]').val('');
                $('[id$=hdnInterestrate]').val('');
                $('[id$=hdnLoanType]').val('');
                $('[id$=hdnDepositeAmount]').val('');
                $('[id$=hdnLiveLecturesOption]').val('');
                $('[id$=hdnCourseList]').val('');
                $('[id$=hdnBacklogList]').val('');
                checkMode = '';
                document.getElementById("modOfPaymentMessgaeId").innerHTML = 'Mode Of Payment';
                /*----- Un select Radio Button on back ------*/
                $("input:radio").attr("checked", false);
                $("button").removeClass('active');
                TuitionPaymentType = '';
                cartMap.clear();
                updateCart();
            }

            
            function promiseLoader() {
                return new Promise(resolve => {
                    setTimeout(() => {
                        resolve('loan data updated...');
                    }, 7500);
                });
            }

            async function initiatedLoader() {
                $('.loaderPanelDD').css('display', '');
                const result = await promiseLoader();
                console.log(result);
                $('.loaderPanelDD').css('display', 'none');
            }

            $(document).ready(function () {
                $('[id$=DDNote]').hide();
                $('[id$=NEFTNote]').hide();
                $('#InstallmentPaymentButton').hide();
                $('[id$=depositAmountPanel]').hide();
                $('[id$=LoandepositAmountPanel]').hide();
                $('[id$=proceedToLoan]').hide();
                let typeVsClass = {
                    'Zest':'zestLoanSection',
                    'EduVanz':'eduvanzLoanSection',
                    'LiquiLoans':'liquiloanLoanSection',
                    'Propelld':'propelldLoanSection',
                    'EzCred':'ezcredLoanSection',
                    'GrayQuest':'grayquestLoanSection',
                    'Avanse':'avanseLoanSection' 
                };
                var LoanType = $('[id$=hdnLoanType]').val();
                if(LoanType && typeVsClass.hasOwnProperty(LoanType)){
                    $('.'+ typeVsClass[LoanType]).css("display", "block");
                }else{
                    $('.LoanSection').css("display", "none");
                }
               
                $('[id$=myModal1]').modal({
                    backdrop: 'static',
                    keyboard: false
                });

                $('body').on('click', '[id$=changeDetail]', function () {
                    $('[id$=ChangeDetailModal]').modal({
                        backdrop: 'static',
                        keyboard: false
                    });

                });

                $('body').on('click', '[id$=disclaimerBtn]', function () {
                    $('[id$=AddDisclaimer]').css("display", "none");
                });
 
                /*---- show EMI Option ----------------------------------*/
                
                $('body').on('click', '.LoanBtn', function () {
                    let val = $(this).data('value');
                    let LoanType = $(this).attr('data-loantype');
                    console.log('val '+val);
                    $('.LoanSection').css("display", "none");
                    $('.'+val).css("display", "block");
                });

                var showEMIOption = '{!showEMIOption}';
                if (showEMIOption == 'true') {
                    $('[id$=paymentOptionSection]').hide();
                    $('[id$=showBackToHomeButton]').hide();
                    $('[id$=InstallmentRadionButton]').hide();
                    $('[id$=LoanRadionButton]').hide();
                    $('[id$=InstallmentPaymentButton]').hide();
                    $('[id$=proceedToLoan]').hide();
                    $('[id$=LoanPaymentSection]').hide();
                    $('[id$=ShowEMISection]').show();
                }

                // only Number Input allowed in Installment
                $('.numonly').keypress(function (e) {
                    return (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) ? false : true;
                });

                // payment Options Admission or FullFee
                $('body').on('click','.PaymentForTuitionPayment', function() {
                    TuitionPaymentType = $(this).data('value');
                    window.FeeTypeValue = TuitionPaymentType;
                    var progCategory = '{!programCategory}';
                    var progSpec = '{!programSpecialization}';
                    let feetypes = ['AnnualFee','MultipleSemFee','3SemFee','4SemFee','5SemFee','FullFee','FullFeeLoan', '2TermFee', '3TermFee'];
                    $('[id$=onlineRadionButton]').show();
                    $('[id$=DDRadionButton]').show();
                    if ('{!IsHOForMakingPayment}' == 'true') {
                        console.log('Inside  id$=NEFTRadionButton.show();');
                        $('[id$=NEFTRadionButton]').show();
                    }
                    $('.PaymentForTuitionPayment').removeClass('active');
                    $(this).addClass('active');
                    if (TuitionPaymentType != undefined) {
                        $('[id$=hdnPaymentOption]').val(TuitionPaymentType);
                        // show Disclaimer
                        if(feetypes.includes(TuitionPaymentType) || (TuitionPaymentType == 'Admission' && (progSpec != 'M.Sc. (AI & ML Ops)' && progSpec != 'M.Sc. (AI)' ))) {
                            $('.livelectureSection').show();
                            if ('{!AlreadyMadeAllInstallment}' == 'false') {
                                $('[id$=InstallmentRadionButton]').show();
                            }
                            $('[id$=LoanRadionButton]').show();
                            if ('{!IsReregistartion}' == 'false') {
                                $('[id$=AddDisclaimer]').css("display", "block");
                            }
                        } else {
                            $('[id$=InstallmentRadionButton]').hide();
                            $('[id$=LoanRadionButton]').hide();
                            $('[id$=proceedToLoan]').hide();
                        }
                        
                        // For M.Sc. (AI & ML Ops) with liquiloan subvention
                        console.log('progSpec '+progSpec);
                        if(progSpec == 'M.Sc. (AI & ML Ops)' || progSpec == 'M.Sc. (AI)'){
                            console.log('check for annual and fullfee'+TuitionPaymentType);
                            if(TuitionPaymentType == 'AnnualFee'){
                                $('.LoanAnnualFeeDis').show();
                                $('.LoanFullFeeDis').css("display","none");
                                //$('[id$=onlineRadionButton]').hide();
                                //$('[id$=InstallmentRadionButton]').hide();
                                //$('[id$=DDRadionButton]').hide();
                            }else if(TuitionPaymentType == 'FullFee'){
                                $('.LoanAnnualFeeDis').css("display","none");
                                $('.LoanFullFeeDis').css("display","block");
                                $('[id$=onlineRadionButton]').hide();
                                $('[id$=InstallmentRadionButton]').hide();
                                $('[id$=DDRadionButton]').hide();
                                $('[id$=NEFTRadionButton]').hide();
                            }else if(TuitionPaymentType == 'Admission'){
                                $('[id$=InstallmentRadionButton]').show();
                            }else{
                                $('.LoanAnnualFeeDis').css("display","block");
                                $('.LoanFullFeeDis').css("display","block");
                                $('[id$=onlineRadionButton]').show();
                                $('[id$=DDRadionButton]').show();
                                $('[id$=NEFTRadionButton]').show();
                            }
                        }
                        // for MBA (Distance) with full fee
                        else if(progCategory == 'MBA (Distance) Programs'){
                            console.log('TuitionPaymentType '+TuitionPaymentType+' progCategory '+progCategory);
                            // if(TuitionPaymentType == 'FullFee'){
                            //     $('.showFullFeeLiquiLoan').css("display", "block");
                            //     $('.showOtherTypeLiquiLoan').css("display", "none");
                            //     $('.showOtherTypePropelldLoan').css("display", "none");
                            //     $('.showFullFeeLoanLiquiLoan').css("display","none");
                            //     $('.showFullFeeLoanPropelld').css("display","block");
                            // }else 
                            
                            if(TuitionPaymentType == 'FullFeeLoan'){
                                // $('.showFullFeeLiquiLoan').css("display", "none");
                                $('.showOtherTypeLiquiLoan').css("display", "none");
                                $('.showOtherTypePropelldLoan').css("display", "none");
                                $('.showOtherTypeGrayQuestLoan').css("display", "none");
                                $('.showOtherTypeAvanseLoan').css("display", "none");
                                $('.showFullFeeLoanLiquiLoan').css("display","block");
                                $('.showFullFeeLoanPropelld').css("display","block");
                                $('.showFullFeeLoanGrayQuest').css("display","block");
                                $('.showFullFeeLoanAvanse').css("display","block");
                                $('[id$=onlineRadionButton]').hide();
                                $('[id$=InstallmentRadionButton]').hide();
                                $('[id$=DDRadionButton]').hide();
                                $('[id$=NEFTRadionButton]').hide();
                            }else{
                                $('.showOtherTypeLiquiLoan').css("display", "block");
                                $('.showOtherTypePropelldLoan').css("display", "block");
                                $('.showOtherTypeGrayQuestLoan').css("display", "block");
                                $('.showOtherTypeAvanseLoan').css("display", "block");
                                // $('.showFullFeeLiquiLoan').css("display", "none");
                                $('.showFullFeeLoanLiquiLoan').css("display","none");
                                $('.showFullFeeLoanPropelld').css("display","none");
                                $('.showFullFeeLoanGrayQuest').css("display","none");
                                $('.showFullFeeLoanAvanse').css("display","none");
                            }
                        }else{
                            $('.showOtherTypePropelldLoan').css("display", "block");
                            $('.showOtherTypeGrayQuestLoan').css("display", "block");
                            $('.showOtherTypeLiquiLoan').css("display", "block");
                            $('.showOtherTypeAvanseLoan').css("display", "block");
                            // $('.showFullFeeLiquiLoan').css("display", "none");
                            $('.showFullFeeLoanLiquiLoan').css("display","none");
                            $('.showFullFeeLoanPropelld').css("display","none");
                            $('.showFullFeeLoanGrayQuest').css("display","none");
                            $('.showFullFeeLoanAvanse').css("display","none");
                        }

                        //to show live lectures types based on the Tuition Payment type
                        let objOffeetTypeVsLectureType = {
                            'Admission': '1SemLecturesFee',
                            'AnnualFee': '2SemLecturesFee',
                            'MultipleSemFee': '3SemLecturesFee',
                            '3SemFee': '3SemLecturesFee',
                            'FullFee': '4SemLecturesFee',
                            'FullFeeLoan': '4SemLecturesFee'
                        };

                        if(objOffeetTypeVsLectureType.hasOwnProperty(TuitionPaymentType)) {
                            let lectureType = objOffeetTypeVsLectureType[TuitionPaymentType];
                            let selectedlectureType = $('[id$=hdnLiveLecturesOption]').val();
                            let sem = parseInt(lectureType.charAt(0));
                            $('.SemBundles').hide();
                            $('.SemBundles').removeClass('activeBundle');
                            for (let index = 1; index <= sem; index++) {
                                let lectures = `${index}SemLecturesFee`;
                                let elem = $(`.SemBundles[data-value="${lectures}"]`);
                                if(lectures === '1SemLecturesFee') {
                                    elem.addClass('activeBundle');
                                }
                                elem.show();
                            }

                            // to reset the cart list if the tution type has been changed. 
                            if(selectedlectureType && selectedlectureType!='Custom' && selectedlectureType!='No') {
                                let selectedSem = parseInt(selectedlectureType.charAt(0));
                                if(selectedSem > sem) {
                                    cartMap.delete('livelecture');
                                    $('[id$=hdnLiveLecturesOption]').val('');
                                    $('.PaymentForLiveLectures').removeClass('active');
                                }
                            }

                            // already paid for the live lectures then hide the section
                            if('{!objLiveLecturePayment.AlreadyPaidLiveLectureFee}'=='true' && lectureType=='{!objLiveLecturePayment.LiveLectureTypeOpted}') {
                                $('.livelectureSection').hide();
                                $('[id$=hdnLiveLecturesOption]').val(lectureType);
                                $('[id$=hdnCourseList]').val('{!objLiveLecturePayment.CourseList}');
                            }
                        } else {
                            $('.livelectureSection').hide();
                            cartMap.delete('livelecture');
                            $('[id$=hdnLiveLecturesOption]').val('');
                            $('.PaymentForLiveLectures').removeClass('active');
                            $('[id$=hdnCourseList]').val('');
                            $('.ChooseSubjects').removeClass('active');
                        }

                        // to show update in my cart
                        // var lateFeeAmount = parseInt('{!applicableLateFee}');
                        let applicableCareerServiceFee = parseFloat($('[id$=applicableCareerServiceFee]').val());
                        let applicableCourseraFee = parseFloat($('[id$=applicableCourseraFee]').val());
                        let applicableLateFee = parseFloat('{!applicableLateFee}');

                        // let totalAmount = TuitionPaymentType === 'Registration' ? parseFloat($(this).data('amount')) : getApplicableAmountForPayment();
                        let label = $(this).data('label');
                        console.log('label --> ' + label);
                        let otherLabel = ['Career Services','Coursera','Late Fee'];
                        
                        cartMap.clear();
                        // if(label.includes('Career Services') || label.includes('Coursera') || applicableLateFee > 0) {
                        //     totalAmount = totalAmount - (parseFloat(applicableCareerServiceFee) + parseFloat(applicableCourseraFee) + applicableLateFee);
                        // }

                        console.log('TuitionPaymentType---> ' + TuitionPaymentType)

                        if(TuitionPaymentType === 'Registration') {
                            let lstLabel = label.split('+');
                            console.log('lstLabel ', lstLabel, label);
                            addToCart(lstLabel[0].trim(), parseFloat($(this).data('amount')), 'paymentFor');
                            if (lstLabel.length >1 && lstLabel[1].trim() == 'Initial amount') {
                                cartMap.clear();
                                addToCart(lstLabel[0].trim(), getApplicableAmountForSpecificPayment(lstLabel[0].trim()), lstLabel[0].trim());
                                addToCart(lstLabel[1].trim(), getApplicableAmountForSpecificPayment('Initial Payment'), lstLabel[1].trim());
                            }
                        } else {
                            let labelVal = label.trim();
                            if(label.includes('+')) {
                                let lstLabel = label.split('+');
                                console.log('lstLabel ', lstLabel, label);
                                let secVal = otherLabel.includes(lstLabel[1].trim()) ? false : true;
                                if(secVal) {
                                    addToCart(getLabelName(lstLabel[0].trim()), getApplicableAmountForSpecificPayment(lstLabel[0].trim()), lstLabel[0].trim());
                                    addToCart(getLabelName(lstLabel[1].trim()), getApplicableAmountForSpecificPayment(lstLabel[1].trim()), lstLabel[1].trim());
                                } else {
                                    addToCart(getLabelName(lstLabel[0].trim()), getApplicableAmountForSpecificPayment(lstLabel[0].trim()), lstLabel[0].trim());
                                }
                            } else {
                                addToCart(getLabelName(labelVal), getApplicableAmountForSpecificPayment(labelVal), labelVal);
                            }
                        }

                        
                        if(label.includes('Career Services')) {
                            addToCart('Career Services', applicableCareerServiceFee, 'careerservice');
                        }
                        if(label.includes('Coursera')) {
                            addToCart('Coursera', applicableCourseraFee, 'coursera');
                        }
                        if(label.includes('Late Fee')) {
                            addToCart('Late Fee', applicableLateFee, 'latefee');
                        }
                        console.log(cartMap);

                        if (($('[id$=hdnLiveLecturesOption]').val() && $('[id$=hdnCourseList]').val())) {
                            setSelectedSubjects();
                        }
                        if (($('[id$=hdnBacklogList]').val())) {
                            setSelectedBacklogSubjects();
                        }
                        onLoadQuery = false;
                        updateCart();
                    }
                });

                function getLabelName(label) {
                    switch (label) {
                        case 'FullFee':
                            return 'Full Program Fee';
                        case 'AnnualFee':
                            return 'Annual Program Fee';
                        default:
                            return label;
                    }
                    // return label == 'FullFee' ? 'Full Program Fee' : label;
                }

                /*------------------------------------------Payment Options -----------------------------*/
                $('body').on('change', '[name$=PaymentMode]', function () {
                    if (TuitionPaymentType) {
                        var selectedOpt = this.value;
                        // let ZestLoanOption = '{!objPaymentFormConfiguration.Show_Zest_Loan_Option__c}';
                        // let eduvanzLoanOption = '{!objPaymentFormConfiguration.Show_Eduvaz_Loan_Option__c}';
                        // let liquiloansOption = '{!objPaymentFormConfiguration.Show_LiquiLoans_Loan_Option__c}';

                        if (selectedOpt != undefined) {
                            let liveLecture = $('[id$=hdnLiveLecturesOption]').val();
                            let courseList = $('[id$=hdnCourseList]').val();
                            if((liveLecture && (liveLecture!='Custom' || courseList)) || '{!objPaymentFormConfiguration.ShowLiveLectures__c}' === 'false' || TuitionPaymentType === 'Registration' || '{!showliveLectureBasedOnSY}' === 'false') {
                                $('[id$=hdnPaymentMode]').val(selectedOpt);
                                // To hide All the Options.
                                // $('.paymentOptions').hide();
                                if (selectedOpt == 'Demand Draft') {
                                    $('[id$=DDNote]').show();
                                    $('[id$=NEFTNote]').hide();
                                    $('[id$=PayBtn]').hide();
                                    $('[id$=PayBtndd]').show();
                                    $('[id$=PayBtnNEFT]').hide();
                                    $('[id$=proceedToLoan]').hide();
                                    $('[id$=InstallmentPaymentButton]').hide();
                                } else if (selectedOpt == 'NEFT') {
                                    $('[id$=DDNote]').hide();
                                    $('[id$=NEFTNote]').show();
                                    $('[id$=PayBtn]').hide();
                                    $('[id$=PayBtndd]').hide();
                                    $('[id$=PayBtnNEFT]').show();
                                    $('[id$=proceedToLoan]').hide();
                                    $('[id$=InstallmentPaymentButton]').hide();
                                } else if (selectedOpt == 'Online') {
                                    $('[id$=DDNote]').hide();
                                    $('[id$=NEFTNote]').hide();
                                    $('[id$=PayBtn]').show();
                                    $('[id$=PayBtndd]').hide();
                                    $('[id$=PayBtnNEFT]').hide();
                                    $('[id$=proceedToLoan]').hide();
                                    $('[id$=InstallmentPaymentButton]').hide();
                                } else if (selectedOpt == 'Loan') {
                                    $('[id$=DDNote]').hide();
                                    $('[id$=NEFTNote]').hide();
                                    $('[id$=PayBtn]').hide();
                                    $('[id$=PayBtndd]').hide();
                                    $('[id$=PayBtnNEFT]').hide();
                                    // if (ZestLoanOption == 'true' || eduvanzLoanOption == 'true' || liquiloansOption == 'true') {
                                        $('[id$=proceedToLoan]').show();
                                    // }
                                    $('[id$=InstallmentPaymentButton]').hide();
                                    checkMode = 'Loan';
                                } else if (selectedOpt == 'Installment') {
                                    $('[id$=DDNote]').hide();
                                    $('[id$=NEFTNote]').hide();
                                    $('[id$=PayBtn]').hide();
                                    $('[id$=PayBtndd]').hide();
                                    $('[id$=PayBtnNEFT]').hide();
                                    $('[id$=proceedToLoan]').hide();
                                    $('[id$=InstallmentPaymentButton]').show();
                                    checkMode = 'Installment';
                                }
                            } else {
                                showHtmlMessage('Please select the Payment - Live Lectures');
                                this.checked = false;
                            }
                        }
                    } else {
                        showHtmlMessage('Please select the payment amount');
                        this.checked = false;
                    }
                });

                $('[id$=PayBtndd]').click(function () {
                    initiatedLoader();
                });

                $('[id$=PayBtnNEFT]').click(function () {
                    initiatedLoader();
                });

                /*------------------------hide and Show Down Payment Options -----------------------------*/
                $('body').on('click', '[id$=proceedToLoan]', function () {

                    //iterate and set Loan details.
                    let loanTypes = ['Zest','EduVanz','LiquiLoans','Propelld','EzCred','GrayQuest','Avanse'];
                    loanTypes.forEach(element => {
                        let renderId = `${element}LoanSection`;
                        renderLoanDetails(element,window.FeeTypeValue,renderId);
                    });

                    $('[id$=proceedtoLoanSection]').hide();
                    $('[id$=paymentOptionSection]').hide();
                    $('[id$=showBackToHomeButton]').show();
                    $('[id$=InstallmentRadionButton]').hide();
                    $('[id$=LoanRadionButton]').hide();
                    $('[id$=InstallmentPaymentButton]').hide();
                    $('[id$=proceedToLoan]').hide();
                    $('[id$=LoanPaymentSection]').show();
                    $('[id$=ShowEMISection]').hide();
                    // var selectedOpt = $('[name$=PaymentFor]').val();
                    var paymentOption = $('[id$=hdnPaymentOption]').val();
                    var progSpec = '{!programSpecialization}';
                    var progCategory = '{!programCategory}';
                    $('[id$=hdnPaymentOption]').val('DownPayment-' + paymentOption);

                    document.getElementById("modOfPaymentMessgaeId").innerHTML = 'Make Down Payment';
                    var downPaymentPercentage = parseFloat('{!objPaymentFormConfiguration.DownPayment_Percentage__c}');
                    var minAmountToPay = getDownPaymentAmount(downPaymentPercentage, 'Loan');
                    $('[id$=hdnDepositeAmount]').val(minAmountToPay);
                    $('[id$=downPaymentForLoanApplication]').val(minAmountToPay);

                    var selectedAmount = minAmountToPay;
                    var applicableAmount = parseInt(getApplicableAmountForPayment()) + parseInt(getApplicableAmountForLiveLectures()) + parseInt(getApplicableAmountForBacklog());
                    console.log('applicableAmount ==>'+ applicableAmount);
                    $('[id$=LoandepositAmountPanel]').show();

                    var resultForcheckPrevPayment = CheckForPreviousPayment();
                    var checkforDownPaymentapplicableToZero = resultForcheckPrevPayment.checkForPreviousPayment;

                    if(progSpec == 'M.Sc. (AI & ML Ops)' || progSpec == 'M.Sc. (AI)'){
                        console.log('check for annual and fullfee ==>'+paymentOption);
                        if(paymentOption == 'FullFee' || paymentOption == 'AnnualFee'){
                            $('[id$=onlineRadionButton]').show();
                        }else{
                            $('[id$=onlineRadionButton]').hide();
                        }
                    }

                    if(progCategory == 'MBA (Distance) Programs'){
                        console.log('check for fullfeeloan ==>'+paymentOption);
                        if(paymentOption == 'FullFeeLoan'){
                            $('[id$=onlineRadionButton]').show();
                        }
                    }

                    if (checkforDownPaymentapplicableToZero == true) {
                        minAmountToPay = resultForcheckPrevPayment.pendingAmount;
                        selectedAmount = resultForcheckPrevPayment.pendingAmount;
                        $('[id$=downPaymentForLoanApplication]').val(minAmountToPay);
                        if (minAmountToPay == 0) {
                            $('[id$=proceedtoLoanSection]').show();
                            $('.modeOfPayment').hide();
                        } else {
                            $('.modeOfPayment').show();
                        }
                    } else {
                        $('.modeOfPayment').show();
                    }

                    var loanBalanceAmt = applicableAmount - selectedAmount;
                    console.log('loanBalanceAmt ' + loanBalanceAmt);

                    // if (loanBalanceAmt < 10000) {
                    //     $('.showEduVanzLoan').css('display', 'none');
                    // } else {
                    //     $('.showEduVanzLoan').css('display', 'block');
                    // }

                    if (loanBalanceAmt < 15000) {
                        $('.showPropelldLoanBtn').css('display', 'none');
                        $('.showAvanseLoanBtn').css('display', 'none');
                    } else {
                        $('.showPropelldLoanBtn').css('display', 'block');
                        $('.showAvanseLoanBtn').css('display','block');
                    }
                    // hide id selected payment amount is less than 99000
                    console.log('progSpec '+progSpec+' loanBalanceAmt '+loanBalanceAmt);
                    showHideLiquiloansTenure(progSpec,loanBalanceAmt);
                    
                    document.getElementById("LoanbalanceAmountToPay").innerHTML = loanBalanceAmt;
                    console.log('minAmountToPay -->' + minAmountToPay);
                    showEMIOnPage(minAmountToPay, 0);
                });

                $('[id$=showBackToHomeButton]').click(function () {
                    $('.modeOfPayment').show();
                });
                $('body').on('click', '[id$=InstallmentPaymentButton]', function () {
                    $('[id$=InstallmentDownPaymentSection]').show();
                    $('[id$=paymentOptionSection]').hide();
                    $('[id$=showBackToHomeButton]').show();
                    $('[id$=InstallmentRadionButton]').hide();
                    $('[id$=LoanRadionButton]').hide();
                    $('[id$=InstallmentPaymentButton]').hide();
                    $('[id$=ShowEMISection]').hide();
                    var registrationFeePaid = '{!AlreadyPaidRegistrationFee}';
                    var applicableLateFee = '{!applicableLateFee}';
                    var paymentOption = $('[id$=hdnPaymentOption]').val();
                    $('[id$=hdnPaymentOption]').val('Installment-' + paymentOption);

                    var minAmountToPay = getDownPaymentAmount(20, 'Instalment');
                    console.log('minAmountToPay before--' + minAmountToPay);


                    //minAmountToPay = parseFloat(minAmountToPay) + parseFloat('{!applicableLateFee}');

                    console.log('minAmountToPay after--' + minAmountToPay);
                    $('[id$=hdnDepositeAmount]').val(minAmountToPay);
                    $('[id$=downPaymentForInstallment]').val(minAmountToPay);

                    var selectedAmount = minAmountToPay;
                    var applicableAmount = parseInt(getApplicableAmountForPayment()) + parseInt(getApplicableAmountForLiveLectures()) + parseInt(getApplicableAmountForBacklog());
                    if (parseFloat(applicableLateFee) > 0) {
                        applicableAmount = parseFloat(applicableAmount) + parseFloat(applicableLateFee);
                        console.log('applicableAmount in installment ---' + applicableAmount);
                    }
                    $('[id$=depositAmountPanel]').show();
                    document.getElementById("balanceAmountToPay").innerHTML = applicableAmount - selectedAmount;
                });
                /*--------------------------------------------------------Payment Gate Way Options ----------------------------------------*/

                $('body').on('change', 'input[type=radio][name=paymentGatewayGrp]', function () {
                    var selectedOpt = this.value;
                    console.log('this.value ==>'+selectedOpt);
                    $('[id$=hdngetWay]').val(selectedOpt);
                    callMakePayment();
                    $('.loaderPanel').show();
                    $('[id$=PaymentGateWayOption]').css("display", "none");
                });

                /*--------------------------------------------------------Down Payment Calculation ---------------------------------------------*/
                $('body').on('keyup', '[id$=downPaymentForInstallment]', function () {
                    var selectedAmount = this.value;
                    var applicableAmount = parseInt(getApplicableAmountForPayment()) + parseInt(getApplicableAmountForLiveLectures()) + parseInt(getApplicableAmountForBacklog());
                    $('[id$=depositAmountPanel]').show();
                    document.getElementById("balanceAmountToPay").innerHTML = applicableAmount - selectedAmount;
                });

                $('body').on('keyup', '[id$=downPaymentForLoanApplication]', function () {
                    var selectedAmount = this.value;
                    var applicableAmount = parseInt(getApplicableAmountForPayment()) + parseInt(getApplicableAmountForLiveLectures()) + parseInt(getApplicableAmountForBacklog());
                    $('[id$=LoandepositAmountPanel]').show();
                    var EMI = $('[id$=hdnEMI]').val();
                    var Tenure = $('[id$=hdnTenure]').val();
                    var LoanType = $('[id$=hdnLoanType]').val();
                    var downPaymentPercentage = parseFloat('{!objPaymentFormConfiguration.DownPayment_Percentage__c}');
                    var minAmountToPay = getDownPaymentAmount(downPaymentPercentage, 'Loan');
                    var balanceAmountToPaid = parseFloat(applicableAmount) - selectedAmount;
                    if (LoanType != 'Zest' && LoanType != 'EduVanz' && LoanType !='LiquiLoans' && LoanType !='EzCred' && LoanType !='GrayQuest' && LoanType != 'Avanse') {
                        var additionalAmount = 0;
                        if (EMI != '' && Tenure != '3') {
                            additionalAmount = (parseFloat(selectedAmount) - (parseFloat(minAmountToPay) + parseFloat(EMI)));

                            balanceAmountToPaid = parseFloat(applicableAmount) - (parseFloat(minAmountToPay) + parseFloat(additionalAmount));
                        } else {
                            additionalAmount = (parseFloat(selectedAmount) - parseFloat(minAmountToPay));
                            balanceAmountToPaid = parseFloat(applicableAmount) - (parseFloat(minAmountToPay) + parseFloat(additionalAmount));
                        }
                    }

                    console.log('minAmountToPay----' + minAmountToPay + '---EMI ---' + EMI + '--LoanType--' + LoanType);
                    document.getElementById("LoanbalanceAmountToPay").innerHTML = balanceAmountToPaid;
                    showEMIOnPage(minAmountToPay, balanceAmountToPaid);

                    // to remove the selected EMI Option if downpayment amount is chaged for liquiloans.
                    if($('input[name=EMIOption]:checked').length >= 0 && $('input[name=EMIOption]:checked').hasClass("liquiLoansOption")){
                        $('input[name=EMIOption]').prop("checked", false);
                    }
                    /*----- Un select Radio Button on back ------*/
                    escapeOriginalEvent = false;
                    $('[id$=downPaymentForLoanApplication]').trigger('change');
                });

                $('body').on('change', '[id$=downPaymentForInstallment]', function () {
                    var selectedAmount = this.value;
                    $('[id$=hdnDepositeAmount]').val(selectedAmount);
                    var registrationFeePaid = '{!AlreadyPaidRegistrationFee}';
                    var minAmountToPay = getDownPaymentAmount(20, 'Instalment');
                    var applicableAmount = parseInt(getApplicableAmountForPayment()) + parseInt(getApplicableAmountForLiveLectures()) + parseInt(getApplicableAmountForBacklog());

                    if (selectedAmount < minAmountToPay) {
                        document.getElementById("balanceAmountToPay").innerHTML = '';
                        $('[id$=hdnDepositeAmount]').val('');
                        alert('Min Installment to Pay is ' + minAmountToPay);
                        $(this).val('');
                    } else if (parseFloat(applicableAmount) <= parseFloat(selectedAmount)) {
                        document.getElementById("balanceAmountToPay").innerHTML = '';
                        $('[id$=hdnDepositeAmount]').val('');
                        alert('Installment should be less than Admission Amount.Please select Admission Radion Button to Pay.');
                        $(this).val('');
                    }
                });

                $('body').on('change', '[id$=downPaymentForLoanApplication]', function ( event ) {
                    var selectedAmount = this.value;
                    $('[id$=hdnDepositeAmount]').val(selectedAmount);
                    var downPaymentPercentage = parseFloat('{!objPaymentFormConfiguration.DownPayment_Percentage__c}');
                    var minAmountToPay = getDownPaymentAmount(downPaymentPercentage, 'Loan');
                    var EMI = $('[id$=hdnEMI]').val();
                    var Tenure = $('[id$=hdnTenure]').val();
                    var LoanType = $('[id$=hdnLoanType]').val();
                    var resultForcheckPrevPayment = CheckForPreviousPayment();
                    console.dir(resultForcheckPrevPayment);
                    var checkforDownPaymentapplicableToZero = resultForcheckPrevPayment.checkForPreviousPayment;
                    var eduvanzDownpaymentVal = $('[id$=downPaymentForLoanApplication]').val();

                    // console.log('minAmountToPay-->' + minAmountToPay + ' selectedAmount-->' + selectedAmount + ' LoanType-->' + LoanType + ' checkforDownPaymentapplicableToZero--' + checkforDownPaymentapplicableToZero + 'eduvanzDownpaymentVal--' + eduvanzDownpaymentVal);
                    if (LoanType != 'Zest' && LoanType != 'EduVanz' && LoanType != 'LiquiLoans' && LoanType != 'Propelld' && LoanType !='EzCred' && LoanType !='GrayQuest' && LoanType != 'Avanse') {
                        if (EMI != '' && Tenure != '3') {
                            minAmountToPay = parseFloat(minAmountToPay) + parseFloat(EMI);
                        } else {
                            minAmountToPay = parseFloat(minAmountToPay);
                        }
                    }

                    if (checkforDownPaymentapplicableToZero == true && eduvanzDownpaymentVal == 0 && resultForcheckPrevPayment.pendingAmount == 0) {
                        $('[id$=proceedtoLoanSection]').show();
                        $('.modeOfPayment').hide();
                    } else {
                        $('[id$=proceedtoLoanSection]').hide();
                        $('.modeOfPayment').show();
                    }
                    if ( ((!checkforDownPaymentapplicableToZero && selectedAmount < minAmountToPay) ||
                        (checkforDownPaymentapplicableToZero && selectedAmount < resultForcheckPrevPayment.pendingAmount)) 
                        && (event.originalEvent != undefined || escapeOriginalEvent) ) {
                        if (checkforDownPaymentapplicableToZero) {
                            minAmountToPay = resultForcheckPrevPayment.pendingAmount;
                        }
                        $('[id$=proceedtoLoanSection]').hide();
                        document.getElementById("LoanbalanceAmountToPay").innerHTML = '';
                        $('[id$=hdnDepositeAmount]').val('');
                        alert('Min Installment to Pay is ' + minAmountToPay);
                        $(this).val('');
                        showEMIOnPage(minAmountToPay, 0);
                        escapeOriginalEvent = false;

                        // to remove the selected EMI Option if downpayment amount is chaged for liquiloans
                        if($('input[name=EMIOption]:checked').length >= 0 && $('input[name=EMIOption]:checked').hasClass("liquiLoansOption")){
                            $('input[name=EMIOption]').prop("checked", false);
                        }
                    }
                    else if ($('[id$=hdnEMI]').val()) {
                        var applicableAmount = parseInt(getApplicableAmountForPayment()) + parseInt(getApplicableAmountForLiveLectures()) + parseInt(getApplicableAmountForBacklog());
                        var balanceAmountToPaid = parseFloat(applicableAmount) - selectedAmount;
                        var InterestRate = $('[id$=hdnInterestrate]').val();
                        let loanTypeListForFlat = ['EduVanz','LiquiLoans','EzCred','GrayQuest','Propelld','Avanse'];
                        if (loanTypeListForFlat.includes(LoanType)) {
                            EMI = calculateEMI(balanceAmountToPaid, Tenure, InterestRate, 'flat', LoanType);
                        } else if(LoanType == 'Zest') {
                            EMI = calculateEMI(balanceAmountToPaid, Tenure, InterestRate, 'reducing', LoanType);
                        } else {
                            EMI = calculateEMI(balanceAmountToPaid, Tenure, InterestRate, null, LoanType);
                        }
                        $('[id$=hdnEMI]').val(EMI);
                    }
                });

                /*---------------------------------------------------------Interest Option Saving ----------------------------*/

                $('body').on('click', '.EMIOption', function () {
                    var LoanInterestRate = $(this).attr("data-interestRate");
                    var LoanTenure = $(this).val();
                    var LoanEMIType = $(this).attr("data-LoanType");
                    console.log(LoanEMIType + ' -->' + LoanInterestRate);
                    $('[id$=downPaymentForLoanApplication]').trigger('change');
                    showAndCapturEMIOptionsBasedUponLoanType(LoanEMIType, LoanTenure, LoanInterestRate);
                });

                $('body').on('click', '[id$=EMIPayment1]', function () {
                    var selectedAmount = this.value;
                    var EMIFeeType = '{!EMIFeeType}';
                    $('[id$=hdnPaymentOption]').val('EMI-' + EMIFeeType);
                    $('[id$=hdnDepositeAmount]').val(selectedAmount);
                });

                $('body').on('click','.toggleBtn', function() {
                    let idval = $('.'+$(this).data('id'));
                    idval.toggle();
                });

                $('body').on('click','.PaymentForLiveLectures', function() {
                    cartMap.delete('livelecture');
                    updateCart();
                    let selectionVal = $(this).data('value');
                    triggerOnClick(selectionVal, $(this));
                });

                $('body').on('click', '.ChooseSubjects', function () {
                    let selectionVal = $(this).data('value');
                    let selectedOptions = $('[id$=hdnCourseList]').val();
                    let totalSubjects = $('.ChooseSubjects').length;
                    let limitedSubjects = totalSubjects - 1;
                    let selectedOptionArray = selectedOptions != null && selectedOptions != '' ? selectedOptions.split(',') : [];
                    if($(this).hasClass('active') && selectedOptionArray.length > 0) {
                        selectedOptionArray.splice($.inArray(selectionVal.toString(), selectedOptionArray), 1);
                        $(this).removeClass('active');
                    } else if(!$(this).hasClass('active')) {
                        $(this).addClass('active');
                        selectedOptionArray.push(selectionVal.toString());
                    }
                    let uniq = selectedOptionArray.length > 0 ? [...new Set(selectedOptionArray)] : [];
                    console.log(uniq);
                    if(limitedSubjects === uniq.length) {
                        let livelectureElem = $("div.liveLectureBtnGroup").find('.activeBundle');
                        triggerOnClick(livelectureElem.data('value'),livelectureElem);
                    } else {
                        $('[id$=hdnCourseList]').val(uniq.join());
                        let totalAmount = getApplicableAmountForLiveLectures();
                        console.log(totalAmount);
                        addToCart(`Live Lectures - ${uniq.length} Subjects`, totalAmount, 'livelecture');
                        updateCart();
                    }
                });

                // get the Loan Details
                getLoanDetails();
                // -----------------------------------For Backlog Subject start -----------------------------------------------------------------
                $('body').on('click', '.ChooseBacklogSubjects', function () {
                    console.log("inside backlog script");
                    let selectionBacklogVal = $(this).data('value').toString();
                    console.log(selectionBacklogVal);
                    let selectedBacklogOptions = $('[id$=hdnBacklogList]').val();
                    console.log(selectedBacklogOptions);
                    // let totalSubjects = $('.ChooseBacklogSubjects').length;
                    // let limitedSubjects = totalSubjects - 1;
                    let selectedBacklogOptionArray = selectedBacklogOptions != null && selectedBacklogOptions != '' ? selectedBacklogOptions.split(',') : [];
                    if ($(this).hasClass('active') && selectedBacklogOptionArray.length > 0) {
                        selectedBacklogOptionArray.splice($.inArray(selectionBacklogVal, selectedBacklogOptionArray), 1);
                        $(this).removeClass('active');
                    } else if (!$(this).hasClass('active')) {
                        console.log('@@#@#@#');
                        $(this).addClass('active');
                        console.log(selectedBacklogOptionArray);
                        console.log(selectionBacklogVal);
                        selectedBacklogOptionArray.push(selectionBacklogVal);
                    }
                    console.log(selectedBacklogOptionArray);
                    let uniq = selectedBacklogOptionArray.length > 0 ? [...new Set(selectedBacklogOptionArray)] : [];
                    console.log(uniq);
                    $('[id$=hdnBacklogList]').val(uniq.join());
                    let totalBacklogAmount = getApplicableAmountForBacklog();
                    console.log(totalBacklogAmount);

                    // to revert if the amount is below Rs.0/-
                    // if(totalBacklogAmount >= 0) {
                    addToCart(`Backlog Live Lectures - ${uniq.length} Subjects`, totalBacklogAmount, 'backloglecture');
                    updateCart();
                });
            });

            async function getLoanDetails() {
                let chooseProgram = '{!programCategory}';
                let Result = await sforce.apex.execute("GetLoanDetailsService", "getLoanDetails", {chooseProgram: chooseProgram});
                if(Result.length > 0) {
                    if(Result) {
                        window.loanSchemeObject = JSON.parse(Result);
                        console.dir(window.loanSchemeObject);
                        return true;
                    }else {
                        showHtmlMessage('Internal error occured. Kindly contact your Authorized Enrolment Partner.');
                        return false;
                    }
                }else {
                    return false;
                }
            }
 
            function updateCart() {
                let htmtElements = '';
                let totalAmount = 0;
                if(cartMap.size > 0) {
                    for (const [key, value] of cartMap) {
                        htmtElements += `<div class="row">
                            <div class="col-md-7">
                                <span>${value.label}</span>
                            </div>
                            <div class="col-md-5">
                                <span class="fright">${value.amount}</span>
                            </div>
                        </div>`;
                        totalAmount += parseInt(value.amount);
                    }
                    htmtElements += `<hr style="border-top: 1px solid black"><div class="row">
                            <div class="col-md-7">
                                <span>Total Fees</span>
                            </div>
                            <div class="col-md-5">
                                <span class="fright">Rs ${totalAmount}</span>
                            </div>
                        </div>`;
                } else {
                    htmtElements = `<center><img src="{!URLFOR($Resource.emptyCart)}" width="90%"/></center>`;
                }
                
                $('.mycartClass').html(htmtElements);
                
            }

            function addToCart(label, totalAmount, paymentFor) {
                let objcart = {
                    'label': label,
                    'amount': parseFloat(totalAmount) 
                };
                cartMap.set(paymentFor, objcart);
            }

            function ordinal(n) {
                var s = ["th", "st", "nd", "rd"];
                var v = n%100;
                return n + (s[(v-20)%10] || s[v] || s[0]);
            }

            function triggerOnClick(selectionVal,elem) {
                let totalAmount=0,totalSubjects = $('.ChooseSubjects').length;
                $('[id$=hdnLiveLecturesOption]').val(selectionVal);
                $('.PaymentForLiveLectures').removeClass('active');
                elem.addClass('active');
                if(selectionVal == 'Custom') {
                    let semester = ordinal(parseInt('{!semester}'));
                    let context = `You will be able to select subjects and pay for live lectures only for ${semester} semester. For subsequent semesters payment for live lectures will be applicable at the time of re-registration
                    <br/>Please cross verify your selections, all subjects are selected by default and you can make necessary changes before paying the fees`;
                    showHtmlMessage(context);
                    $('.SubjectSection').removeClass('hide');
                    $('.SubjectSection').show();
                } else {
                    $('.SubjectSection').hide();
                    $('.ChooseSubjects').removeClass('active');
                    $('[id$=hdnCourseList]').val('');
                    if(selectionVal != 'No') {
                        let jsonStringOfProductVsSubjects = $('[id$=hdnSubjectsCount]').val();
                        let mapOfProductVsSubjects = JSON.parse(jsonStringOfProductVsSubjects);
                        let sem = parseInt(selectionVal.charAt(0));
                        totalSubjects = mapOfProductVsSubjects[selectionVal];
                        let totalAmount = getApplicableAmountForLiveLectures();
                        console.log(totalAmount);
                        addToCart(`Live Lectures - ${totalSubjects} Subjects`, totalAmount, 'livelecture');
                    } else {
                        cartMap.delete('livelecture');
                    }
                    updateCart();
                }
            }

            function setSelectedSubjects() {
                // To set the Custom live lecture type selected
                let livelectureElem = $(`.PaymentForLiveLectures[data-value="Custom"]`);
                triggerOnClick(livelectureElem.data('value'),livelectureElem);

                // To set the Selected Subjects active
                let selectedOptions = '{!objLiveLecturePayment.CourseList}';
                let totalSubjects = $('.ChooseSubjects').length;
                let selectedOptionArray = selectedOptions != null && selectedOptions != '' ? selectedOptions.split(',') : [];
                $(".ChooseSubjects").each(function( index,element ) {
                    let courseId = $(this).data('value').toString();
                    console.log(courseId);
                    console.log(selectedOptionArray);
                    if($.inArray(courseId,selectedOptionArray) != -1) {
                        $(this).addClass('active');
                    }
                });
                let totalAmount = getApplicableAmountForLiveLectures();
                addToCart(`Live Lectures - ${selectedOptionArray.length} Subjects`, totalAmount, 'livelecture');
            }

            // ----------------------------------setSelectedLectureForBacklog On Load------------------
                function setSelectedBacklogSubjects() {
                    console.log("inside setSelectedBacklogSubjects ---->");

                    // To set the Selected Subjects active
                    let selectedOptions = $('[id$=hdnBacklogList]').val();
                    console.log(selectedOptions);
                    let selectedOptionArray = selectedOptions != null && selectedOptions != '' ? selectedOptions.split(',') : [];
                    $(".ChooseBacklogSubjects").each(function (index, element) {
                        let courseId = $(this).data('value').toString();
                        console.log(courseId);
                        console.log(selectedOptionArray);
                        if ($.inArray(courseId, selectedOptionArray) != -1) {
                            $(this).addClass('active');
                        }
                    });
                    console.log(selectedOptionArray);
                    let totalAmount = getApplicableAmountForBacklog();
                    addToCart(`Backlog Live Lectures - ${selectedOptionArray.length} Subjects`, totalAmount, 'backloglecture');
                }

            function getDownPaymentAmount(downPaymentPercentage, type) {
                let applicableAmount = type == 'Instalment' ? parseInt(getApplicableAmountForPayment()) : parseInt(getApplicableAmountForPayment()) + parseInt(getApplicableAmountForLiveLectures()) + parseInt(getApplicableAmountForBacklog());
                let applicableLateFee = '{!applicableLateFee}';
                let applicableCareerServiceFee = $('[id$=applicableCareerServiceFee]').val();
                let applicableCourseraFee = $('[id$=applicableCourseraFee]').val();
                let registrationFeePaid = '{!AlreadyPaidRegistrationFee}';
                let maxInstalmentAmt = '{!maxInstalmentAmt}';
                let CareerService = $('[id$=checkCareerServiceOpted]').val();
                let Coursera = $('[id$=checkCourseraOpted]').val();
                let paymentMode = $('[id$=hdnPaymentMode]').val();
                let LoanType = $('[id$=hdnLoanType]').val();

                // Loan down-payment options
                // to check if the down-Payment should be collected via percentage or by fixed minimum amount
                let downPaymentViaPercentage = ('{!objPaymentFormConfiguration.Show_Down_Payment_Percentage__c}' === 'true');
                let downPaymentAmount = parseFloat('{!objPaymentFormConfiguration.DownPayment_Amount__c}');

                console.log('checkCareerServiceOpted2--' + $('[id$=checkCareerServiceOpted]').val());
                if (registrationFeePaid == 'false') {
                    applicableAmount = applicableAmount - parseFloat('{!mapOfProductAndAmount['Registration Fee']}');
                }

                if (applicableCareerServiceFee != '0') {
                    applicableAmount = applicableAmount - parseFloat(applicableCareerServiceFee);
                }

                if(applicableCourseraFee != '0') {
                    applicableAmount =  applicableAmount - parseFloat(applicableCourseraFee);
                }

                if (applicableLateFee != '0') {
                    applicableAmount = applicableAmount - parseFloat(applicableLateFee);
                }
                // addded by @BK 07/11/1993
                // To add the already paid installment/initalAmount in the downpayment calculation to get the product downpayment amount.
                let alreadyPaidAmount = parseFloat('{!totalAmountPaid}');
                if(alreadyPaidAmount > 0) {
                    applicableAmount = applicableAmount + alreadyPaidAmount;
                }

                //  To collect Loan down-payment/Installment from Percentage.
                let result = (downPaymentPercentage * applicableAmount) / 100;
                
                // To add live lecture and backlock amount after calculating program fee instalment percentage
                if (type == 'Instalment') {
                    result = parseFloat(result) + parseInt(getApplicableAmountForLiveLectures()) + parseInt(getApplicableAmountForBacklog())
                }
                
                // To collect Loan down-payment from fixed amount.
                if(type == 'Loan' && (!downPaymentViaPercentage || parseFloat(result) < parseFloat(downPaymentAmount))) {
                    result = downPaymentAmount;
                }
                console.log('result 1-->' + result);

                // To set maximum Installment Amount.
                if (type == 'Instalment' && parseFloat(maxInstalmentAmt) > 0) {
                    result = parseFloat(maxInstalmentAmt);
                }

                // To add the registration fee with down-payment if registration fee is not paid.
                if (registrationFeePaid == 'false') {
                    result = parseFloat(result) + parseFloat('{!mapOfProductAndAmount['Registration Fee']}');
                    console.log('result ---' + result);
                }

                // To add the applicable late fee with down-payment.
                if (parseFloat(applicableLateFee) > 0) {
                    result = parseFloat(result) + parseFloat(applicableLateFee);
                    console.log('result ---' + result);
                }

                // To add the Career-service fee with down-payment (if opted).
                if (CareerService == 'true') {
                    result = parseFloat(result) + parseFloat(applicableCareerServiceFee);
                }

                // To add the Coursera fee with down-payment (if opted).
                if(Coursera == 'true') {
                    result = parseFloat(result) + parseFloat(applicableCourseraFee);
                }
                return result;
            }


            /*---------------------------------------------------------------Interest Calculation -----------------------------------------------*/
            function showEMIOnPage(downPayment, labelAmount) {
                let ZestLoanOption = '{!objPaymentFormConfiguration.Show_Zest_Loan_Option__c}';
                let eduVanzOption = '{!objPaymentFormConfiguration.Show_Eduvaz_Loan_Option__c}';
                let liquiloansOption = '{!objPaymentFormConfiguration.Show_LiquiLoans_Loan_Option__c}';
                let propelldOption = '{!objPaymentFormConfiguration.Show_Propelld_Loan_Option__c}';
                let ezcredOption = '{!objPaymentFormConfiguration.Show_Ezcred_Loan_Option__c}';
                let grayquestOption = '{!objPaymentFormConfiguration.Show_GrayQuest_Loan_Option__c}';
                let avanseOption = '{!objPaymentFormConfiguration.Show_Avanse_Loan_Option__c}';
                let progSpec = '{!programSpecialization}';
                let applicableAmount = parseInt(getApplicableAmountForPayment()) + parseInt(getApplicableAmountForLiveLectures());
                let selectedAmount = downPayment;
                let balanceAmountToPay = applicableAmount - selectedAmount;
                if (labelAmount > 0) {
                    balanceAmountToPay = labelAmount;
                }
                if (ZestLoanOption == 'true') {
                    $(".ZestLoanOption").each(function () {
                        let ZestEMIInterestRate = $(this).attr('data-interestRate');
                        let ZestEMITenure = $(this).val();
                        let ZestLoanId = $(this).attr('data-LoanId');
                        document.getElementById(ZestLoanId).innerHTML = calculateEMI(balanceAmountToPay, ZestEMITenure, ZestEMIInterestRate, 'reducing', 'Zest');
                    });
                }
                if (eduVanzOption == 'true') {
                    // for MBA(WX) and M.Sc.
                        $(".EduVanzLoanOption").each(function () {
                            let eduVanzOptionEMIInterestRate = $(this).attr('data-interestRate');
                            let eduVanzOptionEMITenure = $(this).val();
                            let eduVanzOptionLoanId = $(this).attr('data-LoanId');
                            document.getElementById(eduVanzOptionLoanId).innerHTML = calculateEMI(balanceAmountToPay, eduVanzOptionEMITenure, eduVanzOptionEMIInterestRate, 'flat', 'EduVanz');
                        });

                    // if (balanceAmountToPay < 10000) {
                    //     $('.showEduVanzLoan').css('display', 'none');
                    //     if($('input[name=EMIOption]:checked').length >= 0 && $('[id$=hdnLoanType]').val() == 'EduVanz'){
                    //         $('input[name=EMIOption]').prop("checked", false);
                    //     }
                    // } else {
                    //     $('.showEduVanzLoan').css('display', 'block');
                    // }
                }

                if(propelldOption == 'true' && balanceAmountToPay >= 15000) {
                    $('.showPropelldLoanBtn').show();
                    $(".PropelldLoanOption").each(function () {
                        let propelldOptionFSEMIInterestRate = $(this).attr('data-interestRate');
                        let propelldOptionFSEMITenure = $(this).val();
                        let propelldOptionFSLoanId = $(this).attr('data-LoanId');
                        document.getElementById(propelldOptionFSLoanId).innerHTML = calculateEMI(balanceAmountToPay, propelldOptionFSEMITenure, propelldOptionFSEMIInterestRate, 'flat', 'Propelld');
                    });
                    showHidePropelldTenure(progSpec,balanceAmountToPay);
                } else {
                    $('.showPropelldLoanBtn').hide();
                }

                if(avanseOption == 'true' && balanceAmountToPay >= 15000) {
                    $('.showAvanseLoanBtn').show();
                    $(".AvanseLoanOption").each(function () {
                        let avanseOptionFSEMIInterestRate = $(this).attr('data-interestRate');
                        let avanseOptionFSEMITenure = $(this).val();
                        let avanseOptionFSLoanId = $(this).attr('data-LoanId');
                        document.getElementById(avanseOptionFSLoanId).innerHTML = calculateEMI(balanceAmountToPay, avanseOptionFSEMITenure, avanseOptionFSEMIInterestRate, 'flat', 'Avanse');
                    });
                    showHidePropelldTenure(progSpec,balanceAmountToPay);
                } else {
                    $('.showAvanseLoanBtn').hide();
                }
                
                if (liquiloansOption == 'true') {
                    $(".LiquiLoansLoanOption").each(function () {
                        let liquiLoansOptionFSEMIInterestRate = $(this).attr('data-interestRate');
                        let liquiLoansOptionFSEMITenure = $(this).val();
                        let liquiLoansOptionFSLoanId = $(this).attr('data-LoanId');
                        document.getElementById(liquiLoansOptionFSLoanId).innerHTML = calculateEMI(balanceAmountToPay, liquiLoansOptionFSEMITenure, liquiLoansOptionFSEMIInterestRate, 'flat', 'LiquiLoans');
                    });

                    // show / hide the liquiloans tenures
                    showHideLiquiloansTenure(progSpec,balanceAmountToPay);
                }
                
                if (ezcredOption == 'true') {
                    $(".EzCredLoanOption").each(function () {
                        let liquiLoansOptionFSEMIInterestRate = $(this).attr('data-interestRate');
                        let liquiLoansOptionFSEMITenure = $(this).val();
                        let liquiLoansOptionFSLoanId = $(this).attr('data-LoanId');
                        document.getElementById(liquiLoansOptionFSLoanId).innerHTML = calculateEMI(balanceAmountToPay, liquiLoansOptionFSEMITenure, liquiLoansOptionFSEMIInterestRate, 'flat', 'EzCred');
                    });
                }

                if (grayquestOption == 'true') {
                    $(".GrayQuestLoanOption").each(function () {
                        let LoansOptionFSEMIInterestRate = $(this).attr('data-interestRate');
                        let LoansOptionFSEMITenure = $(this).val();
                        let LoansOptionFSLoanId = $(this).attr('data-LoanId');
                        document.getElementById(LoansOptionFSLoanId).innerHTML = calculateEMI(balanceAmountToPay, LoansOptionFSEMITenure, LoansOptionFSEMIInterestRate, 'flat', 'GrayQuest');
                    });
                }
                
            }

            function showHideLiquiloansTenure(ProgramSpec , LoanAmount){
                let specialization = ['MBA (X)','MBA - X','MBA (WX)','M.Sc.','M.Sc. (AI & ML Ops)','M.Sc. (AI)'];
                if(specialization.includes(ProgramSpec) && LoanAmount > 99000){
                    $('.showTenure9n12EnableForMaster').css('display', '');
                    $('.showTenure9n12EnableforOtherProg').css('display', 'none');
                }else{
                    $('.showTenure9n12EnableForMaster').css('display', 'none');
                    $('.showTenure9n12EnableforOtherProg').css('display', '');
                }

                if( LoanAmount > 99000){
                    $('.showTenure36LiquiLoans').css('display', '');
                }else{
                    $('.showTenure36LiquiLoans').css('display', 'none');
                }
                
                if(specialization.includes(ProgramSpec) && ProgramSpec!='M.Sc.' && LoanAmount > 99000){
                    $('.showTenure15n18EnableForMaster').css('display', '');
                    $('.showTenure15n18EnableforOtherProg').css('display', 'none');
                }else{
                    $('.showTenure15n18EnableForMaster').css('display', 'none');
                    $('.showTenure15n18EnableforOtherProg').css('display', '');
                }
            }

            function showHidePropelldTenure(ProgramSpec, loanAmount) {
                $('.showTenurePropelld').hide();
                let paymentFeeType = $('[id$=hdnPaymentOption]').val();
                let specialization = ['MBA (X)','MBA - X','MBA (WX)','M.Sc.','M.Sc. (AI & ML Ops)','M.Sc. (AI)'];
                if(specialization.includes(ProgramSpec)) {
                    $('.showTenurePropelld').show();
                }else {
                    $('.showTenure3Propelld').show();
                    $('.showTenure6Propelld').show();
                    if(paymentFeeType.includes('AnnualFee') || paymentFeeType.includes('MultipleSemFee') || paymentFeeType.includes('3SemFee') ||paymentFeeType.includes('3TermFee') ) {
                        $('.showTenure9Propelld').show();
                        $('.showTenure12Propelld').show();
                    } else if(paymentFeeType.includes('FullFee')) {
                        $('.showTenure9Propelld').show();
                        $('.showTenure12Propelld').show();
                        if(loanAmount >= 50000) {
                            $('.showTenure15Propelld').show();
                            $('.showTenure24Propelld').show();
                        }
                    }
                }
            }

            function showHideAvanseTenure(ProgramSpec, loanAmount) {
                // $('.showTenureAvanse').hide();
                // let paymentFeeType = $('[id$=hdnPaymentOption]').val();
                // let specialization = ['MBA (X)','MBA - X','MBA (WX)','M.Sc.','M.Sc. (AI & ML Ops)','M.Sc. (AI)'];
                // if(specialization.includes(ProgramSpec)) {
                //     $('.showTenureAvanse').show();
                // }else {
                //     $('.showTenure3Avanse').show();
                //     $('.showTenure6Avanse').show();
                //     if(paymentFeeType.includes('AnnualFee') || paymentFeeType.includes('MultipleSemFee') || paymentFeeType.includes('3SemFee') ||paymentFeeType.includes('3TermFee') ) {
                //         $('.showTenure9Avanse').show();
                //         $('.showTenure12Avanse').show();
                //     } else if(paymentFeeType.includes('FullFee')) {
                //         $('.showTenure9Avanse').show();
                //         $('.showTenure12Avanse').show();
                //         if(loanAmount >= 50000) {
                //             $('.showTenure15Avanse').show();
                //             $('.showTenure18Avanse').show();
                //             $('.showTenure24Avanse').show();
                //         }
                //     }
                // }
                $('.showTenureAvanse').show();
            }

            function calculateEMI(balancePayment, Tenure, Interest, EMIType, loanType) {
                let EMI = 0;
                let progSpec = '{!programSpecialization}';
                let specialization = ['MBA (X)','MBA - X','MBA (WX)'];
                let feeType = $('[id$=hdnPaymentOption]').val();
                if (EMIType == 'flat') {
                    EMI = (balancePayment + Math.round((balancePayment * (Interest / 100) * Tenure))) / Tenure;
                }else if(EMIType == 'reducing') {
                    balancePayment = ~balancePayment + 1;
                    Interest = specialization.includes(progSpec) && (Tenure==12 || Tenure==15) ? 0.01583 : 0.013;
                    EMI = PMT(Interest,Tenure,balancePayment,0,0);
                } else {
                    EMI = ((balancePayment * (Interest / 100)) + balancePayment) / Tenure;
                }
                // For Propelld-FullFeeLoan 24 months tenure processing fee of 2% will be distributed in 24 EMIs.
                if(loanType == 'Propelld' && feeType.includes('FullFeeLoan') && Tenure == 24) {
                    let processingFee = (0.02 * balancePayment) / Tenure;
                    EMI = EMI + processingFee;
                }
                return Math.round(EMI);
            }

            // For Zest Calculation
            function PMT(ir, np, pv, fv, type) {
                /*
                * ir   - interest rate per month
                * np   - number of periods (months)
                * pv   - present value
                * fv   - future value
                * type - when the payments are due:
                *        0: end of the period, e.g. end of month (default)
                *        1: beginning of period
                */
                var pmt, pvif;
                fv || (fv = 0);
                type || (type = 0);
                if (ir === 0)
                    return -(pv + fv)/np;

                pvif = Math.pow(1 + ir, np);
                pmt = - ir * (pv * pvif + fv) / (pvif - 1);
                if (type === 1)
                    pmt /= (1 + ir);

                return pmt;
            }

            function showAndCapturEMIOptionsBasedUponLoanType(LoanType, Tenure, InterestRate) {
                $('[id$=hdnLoanType]').val(LoanType);
                let resultForcheckPrevPayment = CheckForPreviousPayment();
                let checkforDownPaymentapplicableToZero = resultForcheckPrevPayment.checkForPreviousPayment;
                let downPaymentPercentage = parseFloat('{!objPaymentFormConfiguration.DownPayment_Percentage__c}');
                let alreadyEnterdMinAmountToPay = $('[id$=downPaymentForLoanApplication]').val();
                let minAmountToPay = getDownPaymentAmount(downPaymentPercentage, 'Loan');
                if (resultForcheckPrevPayment.pendingAmount > 0) {
                    minAmountToPay = resultForcheckPrevPayment.pendingAmount;
                }

                let registrationFeePaid = '{!AlreadyPaidRegistrationFee}';
                let applicableAmount = parseInt(getApplicableAmountForPayment()) + parseInt(getApplicableAmountForLiveLectures()) + parseInt(getApplicableAmountForBacklog());
                let balanceAmountToPay = applicableAmount - minAmountToPay;
                let checkDown = alreadyEnterdMinAmountToPay > minAmountToPay;
                if(checkDown){
                    balanceAmountToPay = applicableAmount - alreadyEnterdMinAmountToPay;
                }
                // let checkforDownPaymentapplicableToZero = CheckForPreviousPayment();

                let EMI = '';
                let loanTypeListForFlat = ['EduVanz','LiquiLoans','EzCred','GrayQuest','Propelld','Avanse'];
                if (loanTypeListForFlat.includes(LoanType)) {
                    EMI = calculateEMI(balanceAmountToPay, Tenure, InterestRate, 'flat', LoanType);
                } else if(LoanType == 'Zest') {
                    EMI = calculateEMI(balanceAmountToPay, Tenure, InterestRate, 'reducing', LoanType);
                } else {
                    EMI = calculateEMI(balanceAmountToPay, Tenure, InterestRate, null, LoanType);
                }
                console.log('checkforDownPaymentapplicableToZero--' + checkforDownPaymentapplicableToZero);
                if (LoanType == 'Zest' || LoanType == 'EduVanz' || LoanType == 'LiquiLoans' || LoanType == 'Propelld' || LoanType == 'EzCred' || LoanType == 'GrayQuest' || LoanType == 'Avanse') {

                    if (registrationFeePaid == 'false') {
                        minAmountToPay = parseFloat(minAmountToPay);
                    }

                    if (checkforDownPaymentapplicableToZero == true) {
                        minAmountToPay = resultForcheckPrevPayment.pendingAmount;
                    }

                    // to add the minAmountToPay in the DownPayment
                    if(!alreadyEnterdMinAmountToPay || (alreadyEnterdMinAmountToPay && parseFloat(alreadyEnterdMinAmountToPay) < minAmountToPay)) {
                        $('[id$=downPaymentForLoanApplication]').val(minAmountToPay);
                    }

                    balanceAmountToPay = applicableAmount - $('[id$=downPaymentForLoanApplication]').val();
                } 
                escapeOriginalEvent = true;
                $('[id$=downPaymentForLoanApplication]').trigger('change');
                $('[id$=hdnDepositeAmount]').val($('[id$=downPaymentForLoanApplication]').val());
                document.getElementById("LoanbalanceAmountToPay").innerHTML = balanceAmountToPay;
                console.log('minAmountToPay '+minAmountToPay +' alreadyEnterdMinAmountToPay '+alreadyEnterdMinAmountToPay);
                if(alreadyEnterdMinAmountToPay > minAmountToPay){
                    showEMIOnPage(alreadyEnterdMinAmountToPay, 0);
                }else{
                    showEMIOnPage(minAmountToPay, 0);
                }
                
                $('[id$=hdnTenure]').val(Tenure);
                $('[id$=hdnEMI]').val(EMI);
                $('[id$=hdnInterestrate]').val(InterestRate);
            }

            function renderLoanDetails(LoanType,FeeTypeValue,renderId) {
                let progCategory = '{!programCategory}';
                let specializationOptions = ['MBA (WX)','MBA - X','M.Sc.','M.Sc. (AI)','M.Sc. (AI & ML Ops)','Certificate Term 1','Certificate Term 2','Certificate Term 3','Professional Diploma Term 4','MBA'];
                let progSpec = progCategory == 'Master Programs' ? '{!programSpecialization}' : null;
                if(LoanType == 'Propelld' || LoanType == 'LiquiLoans' || LoanType == 'EduVanz' || LoanType == 'Avanse' || LoanType == 'GrayQuest') {
                    progSpec = '{!programSpecialization}' != '' && specializationOptions.includes('{!programSpecialization}') ? '{!programSpecialization}' : null;
                }
                let key = progCategory+'-'+progSpec+'-'+LoanType+'-'+FeeTypeValue;
                console.log('key ==>'+key);
                let LoanSchemes = loanSchemeObject[key];
                console.log(LoanSchemes);
                if(LoanSchemes === undefined) {
                    $(`.show${LoanType}LoanBtn`).hide();
                } else {
                    $(`.show${LoanType}LoanBtn`).show();
                }

                let LoanInformation = $(`#${renderId}`);
                LoanInformation.html("");

                let table = $("<table>", {
                    "id": "loantable",
                    "class": "table table-responsive table-bordered"
                }).appendTo(LoanInformation);
                
                // thead section.
                let thead = $("<thead>").appendTo(table);
                let tr = $("<tr>").appendTo(thead);
                $("<th>").prependTo(tr).html("EMI");
                $("<th>").prependTo(tr).html("Interest (P/M)");
                $("<th>").prependTo(tr).html("Tenure");

                let tbody = $("<tbody>").appendTo(table);

                for (const property in LoanSchemes) {
                    let i = 1;
                    let element = LoanSchemes[property];
                    let classVal = `showTenure${element.Tenure__c}${element.Loan_Type__c} showTenure${element.Loan_Type__c}`;
                    //NOPF is only for Avanse FullFeeLoan as there 24 tenure interest 0 but processing fee is there and another 24 tenure will have interest and PF is 0. Class name changes done to make difference in two 24 tenure.
                    // if (property.includes("NOPF")) {
                    //     elementLoanId = elementLoanId + "NOPF";
                    // }
                    console.log('classVal--->' + classVal + 'property--->' + property);
                    var fragTrow = $("<tr>", {
                        "class": classVal
                    }).appendTo(tbody);
                    let isIR = element.Interest_Rate__c > 0;
                    let interestRate = isIR ? element.Interest_Rate__c.toFixed(2) : element.Interest_Rate__c.toFixed(1);
                    let monthlyRate = LoanType === 'GrayQuest' && isIR ? (interestRate / parseInt(element.Tenure__c)).toFixed(2) : interestRate;
                    console.log('interestRate--->' + interestRate);
                    let tdval1 = `<div class="radio">
                                <label>
                                    <input type="radio" name="EMIOption" id="${element.Loan_Type__c}EMIOption${i}" class="iCheckRadio EMIOption ${element.Loan_Type__c}LoanOption" data-mode="2"
                                        value="${element.Tenure__c}" data-interestRate="${interestRate}" data-LoanType="${element.Loan_Type__c}" data-LoanId="${element.Loan_Type__c}Tenure${element.Tenure__c}M" />
                                    <span>${element.Tenure__c}</span>
                                </label>
                            </div>`;
                    $("<td>").appendTo(fragTrow).html(tdval1);
                    
                    let tdval2 = '<span>'+monthlyRate+'%</span>';
                    $("<td>").appendTo(fragTrow).html(tdval2);

                    let tdval3 = `<span id="${element.Loan_Type__c}Tenure${element.Tenure__c}M"></span>`;
                    $("<td>").appendTo(fragTrow).html(tdval3);
                    i++;
                }
            }

            function showHtmlMessage(message) {
                $('#errorMessage').html(message);
                $('#errorPopupPanel').show();
            }

            function hidePopup() {
                $('#errorMessage').empty();
                $('#errorPopupPanel').hide();
            }

            function popupError() {
                let errorMessage = 'You are not eligible to proceed. <br/> Hello student kindly cordinate with your Learning center';
                showHtmlMessage(errorMessage);
            }

            function validateLoanApplicationBtn() {
                var selectedPaymentOption = $('[id$=hdnPaymentOption]').val();
                if (selectedPaymentOption.includes('DownPayment') && $('input[name=EMIOption]:checked').length <= 0) {
                    alert('Kindly select EMI Option');
                    return false;
                }
                return true;
            }

            function OptedForCareerService(elem) {
                $('.loaderPanel').show();
                let opted = elem.checked;
                console.log('opted-->' + opted);
                let optedVal = elem.value;
                console.log(optedVal);
                if(optedVal === 'Coursera') {
                    $('[id$=checkCourseraOpted]').val(opted);
                } else {
                    $('[id$=checkCareerServiceOpted]').val(opted);
                }
                callConfigurePaymentOption();
            }

            function CheckForPreviousPayment() {
                let downPaymentPercentage = parseFloat('{!objPaymentFormConfiguration.DownPayment_Percentage__c}');
                let ApplicableDownPayment = getDownPaymentAmount(downPaymentPercentage, 'Loan');
                let availablePaidAmount = '{!totalAmountPaid}';
                let result = {
                    checkForPreviousPayment: false,
                    pendingAmount: 0
                };
                if (availablePaidAmount >= ApplicableDownPayment) {
                    result.checkForPreviousPayment = true;
                    result.pendingAmount = 0;
                    return result;
                } else {
                    availablePaidAmount = parseInt(availablePaidAmount);
                    if (availablePaidAmount > 0) {
                        let applicableLateFee = '{!applicableLateFee}';
                        let applicableCareerServiceFee = $('[id$=applicableCareerServiceFee]').val();
                        let CareerService = $('[id$=checkCareerServiceOpted]').val();
                        let applicableCourseraFee = $('[id$=applicableCourseraFee]').val();
                        let Coursera = $('[id$=checkCourseraOpted]').val(); 
                        let lateFee_CarrerServiceFee_Coursera = 0;
                        if (parseFloat(applicableLateFee) > 0) {
                            lateFee_CarrerServiceFee_Coursera = parseFloat(applicableLateFee);
                        }
                        if (CareerService == 'true') {
                            lateFee_CarrerServiceFee_Coursera = parseFloat(lateFee_CarrerServiceFee_Coursera) + parseFloat(applicableCareerServiceFee);
                        }
                        lateFee_CarrerServiceFee_Coursera = Coursera == 'true' ? parseFloat(lateFee_CarrerServiceFee_Coursera) + parseFloat(applicableCourseraFee) : lateFee_CarrerServiceFee_Coursera;
                        let pendingAmountV2 = parseInt(ApplicableDownPayment) - availablePaidAmount;
                        if (pendingAmountV2 > 0) {
                            result.checkForPreviousPayment = true;
                            result.pendingAmount = pendingAmountV2;
                            if(lateFee_CarrerServiceFee_Coursera > pendingAmountV2) {
                                result.pendingAmount = lateFee_CarrerServiceFee_Coursera;
                            }
                            return result;
                        }
                    }
                    return result;
                }
            }

        </script>
    </body>
</apex:Page>